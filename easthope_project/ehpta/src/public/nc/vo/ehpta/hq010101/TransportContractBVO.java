/***************************************************************\
 *     The skeleton of this class is generated by an automatic *
 * code generator for NC product. It is based on Velocity.     *
\***************************************************************/
package nc.vo.ehpta.hq010101;

import java.util.ArrayList;
import nc.vo.pub.*;
import nc.vo.pub.lang.*;

/**
 * <b> 在此处简要描述此类的功能 </b>
 * 
 * <p>
 * 在此处添加此类的描述信息
 * </p>
 * 
 * 创建日期:2012-7-23
 * 
 * @author ${vmObject.author}
 * @version Your Project 1.0
 */
public class TransportContractBVO extends SuperVO {

	public String pk_estordoc;
	public String def5;
	public UFDouble ashipprice;
	public String pk_transport;
	public Integer dr;
	public UFDouble inlandshipfee;
	public String def7;
	public String def6;
	public String ts;
	public String def10;
	public String pk_sstordoc;
	public String memo;
	public String pk_transport_b;
	public String def8;
	public String pk_sendtype;
	public UFDouble def1;
	public String sstoraddr;
	public UFDouble shipregulation;
	public String estoraddr;
	public UFDouble transprice;
	public UFDouble piersfee;
	public UFDouble carfee;
	public String def2;
	public UFDouble shipprice;
	public String def4;
	public UFDouble storshipfee;
	public UFDouble def3;
	public String def9;
	public UFDouble storcarfee;
	public UFDouble dieselprice;

	public static final String PK_ESTORDOC = "pk_estordoc";
	public static final String DEF5 = "def5";
	public static final String ASHIPPRICE = "ashipprice";
	public static final String PK_TRANSPORT = "pk_transport";
	public static final String DR = "dr";
	public static final String INLANDSHIPFEE = "inlandshipfee";
	public static final String DEF7 = "def7";
	public static final String DEF6 = "def6";
	public static final String TS = "ts";
	public static final String DEF10 = "def10";
	public static final String PK_SSTORDOC = "pk_sstordoc";
	public static final String MEMO = "memo";
	public static final String PK_TRANSPORT_B = "pk_transport_b";
	public static final String DEF8 = "def8";
	public static final String PK_SENDTYPE = "pk_sendtype";
	public static final String DEF1 = "def1";
	public static final String SSTORADDR = "sstoraddr";
	public static final String SHIPREGULATION = "shipregulation";
	public static final String ESTORADDR = "estoraddr";
	public static final String TRANSPRICE = "transprice";
	public static final String PIERSFEE = "piersfee";
	public static final String CARFEE = "carfee";
	public static final String DEF2 = "def2";
	public static final String SHIPPRICE = "shipprice";
	public static final String DEF4 = "def4";
	public static final String STORSHIPFEE = "storshipfee";
	public static final String DEF3 = "def3";
	public static final String DEF9 = "def9";
	public static final String STORCARFEE = "storcarfee";
	public static final String DIESELPRICE = "dieselprice";

	/**
	 * 属性pk_estordoc的Getter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @return String
	 */
	public String getPk_estordoc() {
		return pk_estordoc;
	}

	/**
	 * 属性pk_estordoc的Setter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @param newPk_estordoc
	 *            String
	 */
	public void setPk_estordoc(String newPk_estordoc) {

		pk_estordoc = newPk_estordoc;
	}

	/**
	 * 属性def5的Getter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @return String
	 */
	public String getDef5() {
		return def5;
	}

	/**
	 * 属性def5的Setter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @param newDef5
	 *            String
	 */
	public void setDef5(String newDef5) {

		def5 = newDef5;
	}

	/**
	 * 属性ashipprice的Getter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @return UFDouble
	 */
	public UFDouble getAshipprice() {
		return ashipprice;
	}

	/**
	 * 属性ashipprice的Setter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @param newAshipprice
	 *            UFDouble
	 */
	public void setAshipprice(UFDouble newAshipprice) {

		ashipprice = newAshipprice;
	}

	/**
	 * 属性pk_transport的Getter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @return String
	 */
	public String getPk_transport() {
		return pk_transport;
	}

	/**
	 * 属性pk_transport的Setter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @param newPk_transport
	 *            String
	 */
	public void setPk_transport(String newPk_transport) {

		pk_transport = newPk_transport;
	}

	/**
	 * 属性dr的Getter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @return Integer
	 */
	public Integer getDr() {
		return dr;
	}

	/**
	 * 属性dr的Setter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @param newDr
	 *            Integer
	 */
	public void setDr(Integer newDr) {

		dr = newDr;
	}

	/**
	 * 属性inlandshipfee的Getter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @return UFDouble
	 */
	public UFDouble getInlandshipfee() {
		return inlandshipfee;
	}

	/**
	 * 属性inlandshipfee的Setter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @param newInlandshipfee
	 *            UFDouble
	 */
	public void setInlandshipfee(UFDouble newInlandshipfee) {

		inlandshipfee = newInlandshipfee;
	}

	/**
	 * 属性def7的Getter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @return String
	 */
	public String getDef7() {
		return def7;
	}

	/**
	 * 属性def7的Setter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @param newDef7
	 *            String
	 */
	public void setDef7(String newDef7) {

		def7 = newDef7;
	}

	/**
	 * 属性def6的Getter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @return String
	 */
	public String getDef6() {
		return def6;
	}

	/**
	 * 属性def6的Setter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @param newDef6
	 *            String
	 */
	public void setDef6(String newDef6) {

		def6 = newDef6;
	}

	/**
	 * 属性ts的Getter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @return UFDateTime
	 */
	public String getTs() {
		return ts;
	}

	/**
	 * 属性ts的Setter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @param newTs
	 *            UFDateTime
	 */
	public void setTs(String newTs) {

		ts = newTs;
	}

	/**
	 * 属性def10的Getter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @return String
	 */
	public String getDef10() {
		return def10;
	}

	/**
	 * 属性def10的Setter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @param newDef10
	 *            String
	 */
	public void setDef10(String newDef10) {

		def10 = newDef10;
	}

	/**
	 * 属性pk_sstordoc的Getter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @return String
	 */
	public String getPk_sstordoc() {
		return pk_sstordoc;
	}

	/**
	 * 属性pk_sstordoc的Setter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @param newPk_sstordoc
	 *            String
	 */
	public void setPk_sstordoc(String newPk_sstordoc) {

		pk_sstordoc = newPk_sstordoc;
	}

	/**
	 * 属性memo的Getter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @return String
	 */
	public String getMemo() {
		return memo;
	}

	/**
	 * 属性memo的Setter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @param newMemo
	 *            String
	 */
	public void setMemo(String newMemo) {

		memo = newMemo;
	}

	/**
	 * 属性pk_transport_b的Getter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @return String
	 */
	public String getPk_transport_b() {
		return pk_transport_b;
	}

	/**
	 * 属性pk_transport_b的Setter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @param newPk_transport_b
	 *            String
	 */
	public void setPk_transport_b(String newPk_transport_b) {

		pk_transport_b = newPk_transport_b;
	}

	/**
	 * 属性def8的Getter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @return String
	 */
	public String getDef8() {
		return def8;
	}

	/**
	 * 属性def8的Setter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @param newDef8
	 *            String
	 */
	public void setDef8(String newDef8) {

		def8 = newDef8;
	}

	/**
	 * 属性pk_sendtype的Getter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @return String
	 */
	public String getPk_sendtype() {
		return pk_sendtype;
	}

	/**
	 * 属性pk_sendtype的Setter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @param newPk_sendtype
	 *            String
	 */
	public void setPk_sendtype(String newPk_sendtype) {

		pk_sendtype = newPk_sendtype;
	}

	/**
	 * 属性def1的Getter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @return String
	 */
	public UFDouble getDef1() {
		return def1;
	}

	/**
	 * 属性def1的Setter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @param newDef1
	 *            String
	 */
	public void setDef1(UFDouble newDef1) {

		def1 = newDef1;
	}

	/**
	 * 属性sstoraddr的Getter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @return String
	 */
	public String getSstoraddr() {
		return sstoraddr;
	}

	/**
	 * 属性sstoraddr的Setter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @param newSstoraddr
	 *            String
	 */
	public void setSstoraddr(String newSstoraddr) {

		sstoraddr = newSstoraddr;
	}

	/**
	 * 属性shipregulation的Getter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @return UFDouble
	 */
	public UFDouble getShipregulation() {
		return shipregulation;
	}

	/**
	 * 属性shipregulation的Setter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @param newShipregulation
	 *            UFDouble
	 */
	public void setShipregulation(UFDouble newShipregulation) {

		shipregulation = newShipregulation;
	}

	/**
	 * 属性estoraddr的Getter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @return String
	 */
	public String getEstoraddr() {
		return estoraddr;
	}

	/**
	 * 属性estoraddr的Setter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @param newEstoraddr
	 *            String
	 */
	public void setEstoraddr(String newEstoraddr) {

		estoraddr = newEstoraddr;
	}

	/**
	 * 属性transprice的Getter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @return UFDouble
	 */
	public UFDouble getTransprice() {
		return transprice;
	}

	/**
	 * 属性transprice的Setter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @param newTransprice
	 *            UFDouble
	 */
	public void setTransprice(UFDouble newTransprice) {

		transprice = newTransprice;
	}

	/**
	 * 属性piersfee的Getter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @return UFDouble
	 */
	public UFDouble getPiersfee() {
		return piersfee;
	}

	/**
	 * 属性piersfee的Setter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @param newPiersfee
	 *            UFDouble
	 */
	public void setPiersfee(UFDouble newPiersfee) {

		piersfee = newPiersfee;
	}

	/**
	 * 属性carfee的Getter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @return UFDouble
	 */
	public UFDouble getCarfee() {
		return carfee;
	}

	/**
	 * 属性carfee的Setter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @param newCarfee
	 *            UFDouble
	 */
	public void setCarfee(UFDouble newCarfee) {

		carfee = newCarfee;
	}

	/**
	 * 属性def2的Getter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @return String
	 */
	public String getDef2() {
		return def2;
	}

	/**
	 * 属性def2的Setter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @param newDef2
	 *            String
	 */
	public void setDef2(String newDef2) {

		def2 = newDef2;
	}

	/**
	 * 属性shipprice的Getter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @return UFDouble
	 */
	public UFDouble getShipprice() {
		return shipprice;
	}

	/**
	 * 属性shipprice的Setter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @param newShipprice
	 *            UFDouble
	 */
	public void setShipprice(UFDouble newShipprice) {

		shipprice = newShipprice;
	}

	/**
	 * 属性def4的Getter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @return String
	 */
	public String getDef4() {
		return def4;
	}

	/**
	 * 属性def4的Setter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @param newDef4
	 *            String
	 */
	public void setDef4(String newDef4) {

		def4 = newDef4;
	}

	/**
	 * 属性storshipfee的Getter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @return UFDouble
	 */
	public UFDouble getStorshipfee() {
		return storshipfee;
	}

	/**
	 * 属性storshipfee的Setter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @param newStorshipfee
	 *            UFDouble
	 */
	public void setStorshipfee(UFDouble newStorshipfee) {

		storshipfee = newStorshipfee;
	}

	/**
	 * 属性def3的Getter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @return String
	 */
	public UFDouble getDef3() {
		return def3;
	}

	/**
	 * 属性def3的Setter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @param newDef3
	 *            String
	 */
	public void setDef3(UFDouble newDef3) {

		def3 = newDef3;
	}

	/**
	 * 属性def9的Getter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @return String
	 */
	public String getDef9() {
		return def9;
	}

	/**
	 * 属性def9的Setter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @param newDef9
	 *            String
	 */
	public void setDef9(String newDef9) {

		def9 = newDef9;
	}

	/**
	 * 属性storcarfee的Getter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @return UFDouble
	 */
	public UFDouble getStorcarfee() {
		return storcarfee;
	}

	/**
	 * 属性storcarfee的Setter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @param newStorcarfee
	 *            UFDouble
	 */
	public void setStorcarfee(UFDouble newStorcarfee) {

		storcarfee = newStorcarfee;
	}

	/**
	 * 属性dieselprice的Getter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @return UFDouble
	 */
	public UFDouble getDieselprice() {
		return dieselprice;
	}

	/**
	 * 属性dieselprice的Setter方法.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @param newDieselprice
	 *            UFDouble
	 */
	public void setDieselprice(UFDouble newDieselprice) {

		dieselprice = newDieselprice;
	}

	/**
	 * 验证对象各属性之间的数据逻辑正确性.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @exception nc.vo.pub.ValidationException
	 *                如果验证失败,抛出 ValidationException,对错误进行解释.
	 */
	public void validate() throws ValidationException {

		ArrayList errFields = new ArrayList(); // errFields record those null

		// fields that cannot be null.
		// 检查是否为不允许空的字段赋了空值,你可能需要修改下面的提示信息:

		if (pk_transport_b == null) {
			errFields.add(new String("pk_transport_b"));
		}

		StringBuffer message = new StringBuffer();
		message.append("下列字段不能为空:");
		if (errFields.size() > 0) {
			String[] temp = (String[]) errFields.toArray(new String[0]);
			message.append(temp[0]);
			for (int i = 1; i < temp.length; i++) {
				message.append(",");
				message.append(temp[i]);
			}
			throw new NullFieldException(message.toString());
		}
	}

	/**
	 * <p>
	 * 取得父VO主键字段.
	 * <p>
	 * 创建日期:2012-7-23
	 * 
	 * @return java.lang.String
	 */
	public java.lang.String getParentPKFieldName() {

		return "pk_transport";

	}

	/**
	 * <p>
	 * 取得表主键.
	 * <p>
	 * 创建日期:2012-7-23
	 * 
	 * @return java.lang.String
	 */
	public java.lang.String getPKFieldName() {
		return "pk_transport_b";
	}

	/**
	 * <p>
	 * 返回表名称.
	 * <p>
	 * 创建日期:2012-7-23
	 * 
	 * @return java.lang.String
	 */
	public java.lang.String getTableName() {

		return "ehpta_transport_contract_b";
	}

	/**
	 * 按照默认方式创建构造子.
	 * 
	 * 创建日期:2012-7-23
	 */
	public TransportContractBVO() {

		super();
	}

	/**
	 * 使用主键进行初始化的构造子.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @param newPk_transport_b
	 *            主键值
	 */
	public TransportContractBVO(String newPk_transport_b) {

		// 为主键字段赋值:
		pk_transport_b = newPk_transport_b;

	}

	/**
	 * 返回对象标识,用来唯一定位对象.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @return String
	 */
	public String getPrimaryKey() {

		return pk_transport_b;

	}

	/**
	 * 设置对象标识,用来唯一定位对象.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @param newPk_transport_b
	 *            String
	 */
	public void setPrimaryKey(String newPk_transport_b) {

		pk_transport_b = newPk_transport_b;

	}

	/**
	 * 返回数值对象的显示名称.
	 * 
	 * 创建日期:2012-7-23
	 * 
	 * @return java.lang.String 返回数值对象的显示名称.
	 */
	public String getEntityName() {

		return "ehpta_transport_contract_b";

	}
}
