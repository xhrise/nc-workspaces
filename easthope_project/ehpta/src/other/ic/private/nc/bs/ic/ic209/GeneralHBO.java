package nc.bs.ic.ic209;

/***************************************************************\
 *     The skeleton of this class is generated by an automatic *
 * code generator for NC product.                              *
\***************************************************************/

import java.util.ArrayList;
import java.util.HashMap;

import nc.bs.ic.pub.GenMethod;
import nc.bs.ic.pub.vmi.ICSmartToolsDmo;
import nc.bs.scm.pub.smart.SmartDMO;
import nc.vo.ic.ic700.ICDataSet;
import nc.vo.ic.pub.bill.GeneralBillItemVO;
import nc.vo.ic.pub.bill.GeneralBillVO;
import nc.vo.ic.pub.bill.QryConditionVO;
import nc.vo.ic.pub.billtype.BillTypeFactory;
import nc.vo.ic.pub.billtype.IBillType;
import nc.vo.ic.pub.billtype.ModuleCode;
import nc.vo.pub.BusinessException;
import nc.vo.pub.VOStatus;
import nc.vo.pub.lang.UFBoolean;
import nc.vo.pub.lang.UFDouble;
import nc.vo.scm.pub.smart.SmartFieldMeta;
/**
 * 销售出库单服务器端业务控制类
 * 作者：张欣
 * @version	2001-07-17
 * @see		需要参见的其它类
 * @since		从产品的那一个版本，此类被添加进来。（可选）
 * @deprecated该类从产品的那一个版本后，已经被其它类替换。（可选）
*/

public class GeneralHBO extends nc.bs.ic.pub.bill.GeneralBillBO {

/**
 * GeneralHBO 构造子注解。
 */
public GeneralHBO() {
	super();
}

/**
 * 作者：余大英
 * 创建日期：(2001-8-30 13:32:39)
 * @return java.util.ArrayList
 * @param vo nc.vo.ic.pub.bill.GeneralBillVO
 * @exception BusinessException异常说明。
 */
public ArrayList cancelSignBill(GeneralBillVO voCancelAuditBill)
	throws BusinessException{

	try{
		if(voCancelAuditBill==null
			||voCancelAuditBill.getHeaderVO()==null
			||voCancelAuditBill.getHeaderVO().getCgeneralhid()==null)
			throw new BusinessException(nc.bs.ml.NCLangResOnserver.getInstance().getStrByID("4008busi","UPP4008busi-000088")/*@res "调拨入库单不能取消签字:传入参数不完整！"*/);

		nc.bs.ic.pub.settlement.SettlementDMO dmo=new nc.bs.ic.pub.settlement.SettlementDMO();

		if(dmo.isHasSettled(voCancelAuditBill.getHeaderVO().getCgeneralhid()))
			throw  new BusinessException(nc.bs.ml.NCLangResOnserver.getInstance().getStrByID("4008busi","UPP4008busi-000089")/*@res "调拨入库单不能取消签字:已经结算完成！"*/);


	}catch(Exception e){
		GenMethod.throwBusiException(e);
	}
	
	return super.cancelSignBill(voCancelAuditBill);
}

/**
 * 作者：余大英
 * 创建日期：(2001-8-30 13:32:39)
 *
 * @param vo nc.vo.ic.pub.bill.GeneralBillVO
 * @exception BusinessException异常说明。
  2002-01-29 wnj,update it,put 2 funtions loading out of try{}

 */
public void deleteBill(GeneralBillVO vo) throws BusinessException{
	
	
	super.deleteBill(vo);
}

/**
 * 通过主键获得VO对象。test code
 *
 * 创建日期：(2001-5-14)
 * @return nc.vo.ic.ic201.GeneralHVO
 * @param key String
 * @exception BusinessException异常说明。
 */
public ArrayList queryBills(QryConditionVO voQC)
	throws BusinessException{
	try {
		GeneralHDMO dmo = new GeneralHDMO();
		return dmo.queryBills(voQC);

	}catch(Exception e){
		GenMethod.throwBusiException(e);
	}
	return null;
}

/**
 * 作者：余大英
 * 创建日期：(2001-8-30 13:32:39)
 * @return java.util.ArrayList
 * @param vo nc.vo.ic.pub.bill.GeneralBillVO
 * @exception BusinessException异常说明。
 */
public ArrayList saveBill(GeneralBillVO vo) throws BusinessException{
	
	return super.saveBill(vo);
}

/**
 * 创建者：仲瑞庆
 * 功能：保存单据
 * 参数：当前的单据VO，原来的单据Object (实际是个VO)
 * 返回：PK
 * 例外：
 * 日期：(2001-8-30 16:30:16)
 * 修改日期，修改人，修改原因，注释标志：
 * @param svoBill nc.voCur.ic.pub.bill.GeneralBillVO
 * @exception BusinessException异常说明。
 */
public ArrayList saveBill(GeneralBillVO voCur, Object voPre)
	throws BusinessException{

	return super.saveBill(voCur, voPre);
}

/* （非 Javadoc）
 * @see nc.bs.ic.ic209.IGeneralH#setBcurrPrice(nc.vo.to.pub.BillVO[], java.lang.String)
 */
public nc.vo.to.pub.BillVO[] setBcurrPrice(nc.vo.to.pub.BillVO[] vos, String sLogDate)throws BusinessException {
	try{

		GeneralHDMO dmo=new GeneralHDMO();
		vos=dmo.setBcurrPrice(vos,sLogDate);
	}catch(Exception e){
		GenMethod.throwBusiException(e);
	}
	
	return vos;
}

/**
 * 创建者：余大英
 * 功能：签字
 * 参数：

 * 返回：
 * 例外：
 * 日期：(2001-6-14 14:46:54)
 * 修改日期，修改人，修改原因，注释标志：
 * @return nc.voAuditBill.ic.pub.bill.InvVO
 * @param sWh java.lang.String
 * @param sInvID java.lang.String
 */
public ArrayList signBill(GeneralBillVO voAuditBill)
	throws BusinessException{

		return signBills(new GeneralBillVO[]{voAuditBill});
	
}

/**
 * 创建者：余大英
 * 功能：签字
 * 参数：

 * 返回：
 * 例外：
 * 日期：(2001-6-14 14:46:54)
 * 修改日期，修改人，修改原因，注释标志：
 * @return nc.voAuditBill.ic.pub.bill.InvVO
 * @param sWh java.lang.String
 * @param sInvID java.lang.String
 */
public ArrayList signBills(GeneralBillVO[] voAuditBills)
	throws BusinessException{

	if(voAuditBills==null||voAuditBills.length==0)
		return null;
	
	return super.signBills(voAuditBills);
}

/**
 * 创建者：余大英 功能：处理成本尾差，保存后处理。
 *
 * 返回： 例外： 日期：(2001-6-14 14:46:54) 修改日期，修改人，修改原因，注释标志：
 *
 * @return nc.voAuditBill.ic.pub.bill.InvVO
 * @param sWh
 *            java.lang.String
 * @param sInvID
 *            java.lang.String
 */
public void processNmny(GeneralBillVO voBill)
    throws BusinessException{
  if(voBill==null || voBill.getItemCount()<=0)
    return;

  try {
    GeneralBillItemVO[] itemvos = voBill.getItemVOs();
    UFDouble d0 = new UFDouble(0);
    HashMap<String, GeneralBillItemVO> hsitem = new HashMap<String, GeneralBillItemVO>();
    GeneralBillItemVO preitemvo = null;
    for(int i=0;i<itemvos.length;i++){
      if(itemvos[i].getStatus()==VOStatus.DELETED || itemvos[i].getStatus()==VOStatus.UNCHANGED)
        continue;
      
      IBillType billType = BillTypeFactory.getInstance().getBillType(itemvos[i].getCfirsttype());
      if(itemvos[i].getCfirsttype()==null || !billType.typeOf(ModuleCode.TO) || itemvos[i].getCfirstbillbid()==null)
        continue;
      
      if(itemvos[i].getNinnum()==null || itemvos[i].getNinnum().compareTo(d0)==0)
        continue;
      
      preitemvo = (GeneralBillItemVO)hsitem.get(itemvos[i].getCfirstbillbid());
      if(preitemvo==null){
        hsitem.put(itemvos[i].getCfirstbillbid(), itemvos[i]);
        continue;
      }
      
      if(preitemvo.getNinnum()!=null && itemvos[i].getNinnum()!=null && preitemvo.getNinnum().compareTo(itemvos[i].getNinnum())<0){
        hsitem.put(itemvos[i].getCfirstbillbid(), itemvos[i]);
      }
    }
    if(hsitem.size()<=0)
      return;
    
    itemvos = hsitem.values().toArray(new GeneralBillItemVO[hsitem.size()]);
    
    //金额尾差处理
    ICSmartToolsDmo tooldmo = new ICSmartToolsDmo();
    tooldmo.fillVOsValuesBy(itemvos, 
              new String[]{"nintotalnum","nintotalmny"},
              new int[]{SmartFieldMeta.JAVATYPE_UFDOUBLE,SmartFieldMeta.JAVATYPE_UFDOUBLE}, 
              "cfirstbillbid", "ic_general_b", 
              new String[]{"sum(ninnum)","sum(nmny)"}, "cfirstbillbid", 
              " dr = 0 and cfirsttype in ('5D','5E','5I','5C','5X')  group by cfirstbillbid  ");
    
    tooldmo.fillVOsValuesBy(itemvos, 
        new String[]{"nnum","nnotaxprice","nnotaxmny"},
        new int[]{SmartFieldMeta.JAVATYPE_UFDOUBLE,SmartFieldMeta.JAVATYPE_UFDOUBLE,SmartFieldMeta.JAVATYPE_UFDOUBLE}, 
        "cfirstbillbid", "to_bill_b", 
        new String[]{"nnum","nnotaxprice","nnotaxmny"}, "cbill_bid", " dr = 0 ");
    
    ArrayList<GeneralBillItemVO> voupdatelist = new ArrayList<GeneralBillItemVO>();
    UFDouble dtemp1= null,dtemp2=null;
    for(int i=0;i<itemvos.length;i++){
      dtemp1 = (UFDouble)itemvos[i].getAttributeValue("nintotalnum");
      dtemp2 = (UFDouble)itemvos[i].getAttributeValue("nnum");
      if(dtemp1==null || dtemp2==null || dtemp1.compareTo(dtemp2)!=0)
        continue;
      dtemp1 = (UFDouble)itemvos[i].getAttributeValue("nnotaxprice");
      if(itemvos[i].getNprice()==null || dtemp1==null || itemvos[i].getNprice().compareTo(dtemp1)!=0)
        continue;
      
      dtemp1 = (UFDouble)itemvos[i].getAttributeValue("nnotaxmny");
      dtemp2 = (UFDouble)itemvos[i].getAttributeValue("nintotalmny");
      if(dtemp1!=null && dtemp2!=null && dtemp1.compareTo(dtemp2)!=0 && itemvos[i].getNmny()!=null){
        dtemp1 = dtemp1.sub(dtemp2);
        itemvos[i].setNmny(itemvos[i].getNmny().add(dtemp1));
        voupdatelist.add(itemvos[i]);
      }
    }
    
    if(voupdatelist.size()>0){
      SmartDMO sdmo = new SmartDMO();
      sdmo.executeUpdateBatch(itemvos,new String[]{"nmny"},
          new String[]{"cgeneralbid"});
      
      tooldmo.fillVOsValuesBy(itemvos, 
          new String[]{"ts"},
          new int[]{SmartFieldMeta.JAVATYPE_STRING}, 
          "cgeneralbid", "ic_general_b", 
          new String[]{"ts"}, "cgeneralbid", 
          " dr = 0 ");
      
    }
          
  }
  catch (Exception e) {
    //日志异常
    nc.vo.scm.pub.SCMEnv.out(e);
    //库存组异常抛出规范
    throw nc.bs.ic.pub.GenMethod.handleException(e.getMessage(), e);
  }
  
  

}

/**
 * 创建人：刘家清 创建时间：2008-6-28 下午01:21:26 创建原因：调拨出库单推式生成调拨入库单时将实发数量为0的行过滤掉。
 */
public GeneralBillVO modBillByNum(GeneralBillVO vo) throws BusinessException{
	if (null == vo || null == vo.getItemVOs() || 0 == vo.getItemVOs().length)
		return vo;
try{	
	//修改人：刘家清 修改时间：2009-3-6 上午09:09:12 修改原因：退回的调拨出库单不生成调拨入库单
	ICDataSet ds = new ICSmartToolsDmo().getDataSet("ic_general_h", "cgeneralhid", new String[]{"boutretflag"}, new int[] {
            SmartFieldMeta.JAVATYPE_STRING}, new String[]{vo.getItemVOs()[0].getCsourcebillhid()}, null);
	if (null != ds && 0 < ds.getRowCount() && null != ds.getUFBooleanValueAt(0, "boutretflag")
			&& ds.getUFBooleanValueAt(0, "boutretflag").booleanValue()){
		vo.setChildrenVO(null);
		vo.getHeaderVO().setAttributeValue("nosavewithnosign", UFBoolean.TRUE);
		return vo;
	}
	
	ArrayList<GeneralBillItemVO> newItemList = new ArrayList<GeneralBillItemVO>();
	
	for (GeneralBillItemVO itemVO:vo.getItemVOs())
		if ((null != itemVO.getNoutnum() && nc.vo.ic.pub.GenMethod.ZERO.compareTo(itemVO.getNoutnum()) != 0)
				||(null != itemVO.getNinnum() && nc.vo.ic.pub.GenMethod.ZERO.compareTo(itemVO.getNinnum()) != 0))
			newItemList.add(itemVO);
	
	if (0 == newItemList.size()){
		vo.setChildrenVO(null);
		vo.getHeaderVO().setAttributeValue("nosavewithnosign", UFBoolean.TRUE);
		return vo;
	}
	
	GeneralBillItemVO[] newItemVOs = new GeneralBillItemVO[newItemList.size()];
	newItemList.toArray(newItemVOs);
	
	vo.setChildrenVO(newItemVOs);
	
	return vo;
	
}catch (Exception e) {
    //日志异常
    nc.vo.scm.pub.SCMEnv.out(e);
    //库存组异常抛出规范
    throw nc.bs.ic.pub.GenMethod.handleException(e.getMessage(), e);
  }
}

/**
 * 创建人：刘家清 创建时间：2008-10-8 上午10:48:28 创建原因： 调拨出库单推式生成调拨入库单时将应发数量为0的行过滤掉。
 * @param vo
 * @return
 * @throws BusinessException
 * 
 */
public GeneralBillVO modBillByShouldNum(GeneralBillVO vo) throws BusinessException{
	if (null == vo || null == vo.getItemVOs() || 0 == vo.getItemVOs().length)
		return vo;
try{
	//修改人：刘家清 修改时间：2009-3-6 上午09:09:12 修改原因：退回的调拨出库单不生成调拨入库单
	ICDataSet ds = new ICSmartToolsDmo().getDataSet("ic_general_h", "cgeneralhid", new String[]{"boutretflag"}, new int[] {
            SmartFieldMeta.JAVATYPE_STRING}, new String[]{vo.getItemVOs()[0].getCsourcebillhid()}, null);
	if (null != ds && 0 < ds.getRowCount() && null != ds.getUFBooleanValueAt(0, "boutretflag")
			&& ds.getUFBooleanValueAt(0, "boutretflag").booleanValue()){
		vo.setChildrenVO(null);
		vo.getHeaderVO().setAttributeValue("nosavewithnosign", UFBoolean.TRUE);
		return vo;
	}

	
	ArrayList<GeneralBillItemVO> newItemList = new ArrayList<GeneralBillItemVO>();
	
	
	for (GeneralBillItemVO itemVO:vo.getItemVOs())
		if ((null != itemVO.getNshouldoutnum() && nc.vo.ic.pub.GenMethod.ZERO.compareTo(itemVO.getNshouldoutnum()) != 0)
				||(null != itemVO.getNshouldinnum() && nc.vo.ic.pub.GenMethod.ZERO.compareTo(itemVO.getNshouldinnum()) != 0))
			newItemList.add(itemVO);
	
	if (0 == newItemList.size()){
		vo.setChildrenVO(null);
		vo.getHeaderVO().setAttributeValue("nosavewithnosign", UFBoolean.TRUE);
		return vo;
	}
	
	GeneralBillItemVO[] newItemVOs = new GeneralBillItemVO[newItemList.size()];
	newItemList.toArray(newItemVOs);

	vo.setChildrenVO(newItemVOs);
	
	return vo;
	
}catch (Exception e) {
		    //日志异常
		    nc.vo.scm.pub.SCMEnv.out(e);
		    //库存组异常抛出规范
		    throw nc.bs.ic.pub.GenMethod.handleException(e.getMessage(), e);
		  }
}
}