/***************************************************************\
 *     The skeleton of this class is generated by an automatic *
 * code generator for NC product.                              *
\***************************************************************/

package nc.vo.hi.hi_301;

import java.util.ArrayList;

import nc.vo.hr.utils.ml.HRPubRes;
import nc.vo.pub.*;
import nc.vo.pub.lang.*;

/**
 * 此处插入类型说明。
 * 
 * 创建日期：(2003-6-10)
 * @author：
 */
public class PsndocWadocBVO extends CircularlyAccessibleValueObject {

	public String m_pk_psndoc_sub_b;
	public String m_pk_psndoc_sub;
	public String m_pk_wa_item;
	public String m_pk_wa_pralv;
	public String m_pk_wa_seclv;
	public UFDouble m_nmoney;

	/**
	 *     描述上面属性的FieldObjects。主要用于系统工具中，
	 * 业务代码中不会用到下面的FieldObjects。
	 */
	private static StringField m_pk_psndoc_sub_bField;
	private static StringField m_pk_psndoc_subField;
	private static StringField m_pk_wa_itemField;
	private static StringField m_pk_wa_pralvField;
	private static StringField m_pk_wa_seclvField;
	private static UFDoubleField m_nmoneyField;
/**
 * 使用主键字段进行初始化的构造子。
 *
 * 创建日期：(2003-6-10)
 */
public PsndocWadocBVO() {

}
/**
 * 使用主键进行初始化的构造子。
 *
 * 创建日期：(2003-6-10)
 * @param ??fieldNameForMethod?? 主键值
 */
public PsndocWadocBVO(String newPk_psndoc_sub_b) {

	// 为主键字段赋值:
	m_pk_psndoc_sub_b = newPk_psndoc_sub_b;
}
/**
 * 根类Object的方法,克隆这个VO对象。
 *
 * 创建日期：(2003-6-10)
 */
public Object clone() {

	// 复制基类内容并创建新的VO对象：
	Object o = null;
	try {
		o = super.clone();
	} catch (Exception e) {}
	PsndocWadocBVO psndocWadocB = (PsndocWadocBVO)o;

	// 你在下面复制本VO对象的所有属性：

	return psndocWadocB;
}
/**
 * 返回数值对象的显示名称。
 *
 * 创建日期：(2003-6-10)
 * @return java.lang.String 返回数值对象的显示名称。
 */
public String getEntityName() {

	return "PsndocWadocB";
}
/**
 * 返回对象标识，用来唯一定位对象。
 *
 * 创建日期：(2003-6-10)
 * @return String
 */
public String getPrimaryKey() {

	return m_pk_psndoc_sub_b;
}
/**
 * 设置对象标识，用来唯一定位对象。
 *
 * 创建日期：(2003-6-10)
 * @param m_pk_psndoc_sub_b String 
 */
public void setPrimaryKey(String newPk_psndoc_sub_b) {

	m_pk_psndoc_sub_b = newPk_psndoc_sub_b;
}
/**
 * 属性m_pk_psndoc_sub_b的Getter方法。
 *
 * 创建日期：(2003-6-10)
 * @return String
 */
public String getPk_psndoc_sub_b() {
	return m_pk_psndoc_sub_b;
}
/**
 * 属性m_pk_psndoc_sub的Getter方法。
 *
 * 创建日期：(2003-6-10)
 * @return String
 */
public String getPk_psndoc_sub() {
	return m_pk_psndoc_sub;
}
/**
 * 属性m_pk_wa_item的Getter方法。
 *
 * 创建日期：(2003-6-10)
 * @return String
 */
public String getPk_wa_item() {
	return m_pk_wa_item;
}
/**
 * 属性m_pk_wa_pralv的Getter方法。
 *
 * 创建日期：(2003-6-10)
 * @return String
 */
public String getPk_wa_pralv() {
	return m_pk_wa_pralv;
}
/**
 * 属性m_pk_wa_seclv的Getter方法。
 *
 * 创建日期：(2003-6-10)
 * @return String
 */
public String getPk_wa_seclv() {
	return m_pk_wa_seclv;
}
/**
 * 属性m_nmoney的Getter方法。
 *
 * 创建日期：(2003-6-10)
 * @return UFDouble
 */
public UFDouble getNmoney() {
	return m_nmoney;
}
/**
 * 属性m_pk_psndoc_sub_b的setter方法。
 *
 * 创建日期：(2003-6-10)
 * @param newM_pk_psndoc_sub_b String
 */
public void setPk_psndoc_sub_b(String newPk_psndoc_sub_b) {

	m_pk_psndoc_sub_b = newPk_psndoc_sub_b;
}
/**
 * 属性m_pk_psndoc_sub的setter方法。
 *
 * 创建日期：(2003-6-10)
 * @param newM_pk_psndoc_sub String
 */
public void setPk_psndoc_sub(String newPk_psndoc_sub) {

	m_pk_psndoc_sub = newPk_psndoc_sub;
}
/**
 * 属性m_pk_wa_item的setter方法。
 *
 * 创建日期：(2003-6-10)
 * @param newM_pk_wa_item String
 */
public void setPk_wa_item(String newPk_wa_item) {

	m_pk_wa_item = newPk_wa_item;
}
/**
 * 属性m_pk_wa_pralv的setter方法。
 *
 * 创建日期：(2003-6-10)
 * @param newM_pk_wa_pralv String
 */
public void setPk_wa_pralv(String newPk_wa_pralv) {

	m_pk_wa_pralv = newPk_wa_pralv;
}
/**
 * 属性m_pk_wa_seclv的setter方法。
 *
 * 创建日期：(2003-6-10)
 * @param newM_pk_wa_seclv String
 */
public void setPk_wa_seclv(String newPk_wa_seclv) {

	m_pk_wa_seclv = newPk_wa_seclv;
}
/**
 * 属性m_nmoney的setter方法。
 *
 * 创建日期：(2003-6-10)
 * @param newM_nmoney UFDouble
 */
public void setNmoney(UFDouble newNmoney) {

	m_nmoney = newNmoney;
}
/**
 * 验证对象各属性之间的数据逻辑正确性。
 *
 * 创建日期：(2003-6-10)
 * @exception nc.vo.pub.ValidationException 如果验证失败，抛出
 *     ValidationException，对错误进行解释。
 */
public void validate() throws nc.vo.pub.ValidationException {

	ArrayList errFields = new ArrayList(); // errFields record those null fields that cannot be null.
	// 检查是否为不允许空的字段赋了空值，你可能需要修改下面的提示信息：
	if (m_pk_psndoc_sub_b == null) {
		errFields.add(new String("m_pk_psndoc_sub_b"));
	}
	if (m_pk_psndoc_sub == null) {
		errFields.add(new String("m_pk_psndoc_sub"));
	}
	if (m_pk_wa_item == null) {
		errFields.add(new String("m_pk_wa_item"));
	}
	if (m_pk_wa_pralv == null) {
		errFields.add(new String("m_pk_wa_pralv"));
	}
	if (m_pk_wa_seclv == null) {
		errFields.add(new String("m_pk_wa_seclv"));
	}
	if (m_nmoney == null) {
		errFields.add(new String("m_nmoney"));
	}
	// construct the exception message:
	StringBuffer message = new StringBuffer();
	message.append(nc.vo.bd.IBDMsg.MSG_NULL_FIELD);//message.append("下列字段不能为空：");
	if (errFields.size() > 0) {
		String[] temp = (String[]) errFields.toArray(new String[0]);
		message.append(temp[0]);
		for ( int i= 1; i < temp.length; i++ ) {
			message.append(",");//message.append("、");
			message.append(temp[i]);
		}
		// throw the exception:
		throw new NullFieldException(message.toString());
	}
}
/**
 * <p>需要在一个循环中访问的属性的名称数组。
 * <p>
 * 创建日期：(??Date??)
 * @return java.lang.String[]
 */
public java.lang.String[] getAttributeNames() {

	return new String[]{ "pk_psndoc_sub", "pk_wa_item", "pk_wa_pralv", "pk_wa_seclv", "nmoney" };
}
/**
 *  <p>根据一个属性名称字符串该属性的值。
 *  <p>
 * 创建日期：(2003-6-10)
 * @param key java.lang.String
 */
public Object getAttributeValue(String attributeName) {

	if (attributeName.equals("pk_psndoc_sub_b")) {
		return m_pk_psndoc_sub_b;
	}
	else if (attributeName.equals("pk_psndoc_sub")) {
		return m_pk_psndoc_sub;
	}
	else if (attributeName.equals("pk_wa_item")) {
		return m_pk_wa_item;
	}
	else if (attributeName.equals("pk_wa_pralv")) {
		return m_pk_wa_pralv;
	}
	else if (attributeName.equals("pk_wa_seclv")) {
		return m_pk_wa_seclv;
	}
	else if (attributeName.equals("nmoney")) {
		return m_nmoney;
	}
	return null;
}
/**
 *  <p>对参数name对型的属性设置值。
 *  <p>
 * 创建日期：(2003-6-10)
 * @param key java.lang.String
 */
public void setAttributeValue(String name, Object value) {

	try {
		if (name.equals("pk_psndoc_sub_b")) {
			m_pk_psndoc_sub_b = (String) value;
		}
		else if (name.equals("pk_psndoc_sub")) {
			m_pk_psndoc_sub = (String) value;
		}
		else if (name.equals("pk_wa_item")) {
			m_pk_wa_item = (String) value;
		}
		else if (name.equals("pk_wa_pralv")) {
			m_pk_wa_pralv = (String) value;
		}
		else if (name.equals("pk_wa_seclv")) {
			m_pk_wa_seclv = (String) value;
		}
		else if (name.equals("nmoney")) {
			m_nmoney = (UFDouble) value;
		}
	}
	catch (ClassCastException e) {
		throw new ClassCastException(HRPubRes.getClassCastErrMsg(name,value));//throw new ClassCastException("setAttributeValue方法中为 " + name + " 赋值时类型转换错误！（值：" + value + "）");
	}
}
/**
 * FieldObject的Getter方法。
 *
 * 创建日期：(2003-6-10)
 * @return nc.vo.pub.FieldObject
 */
public static StringField getPk_psndoc_sub_bField() {

	if(m_pk_psndoc_sub_bField == null){
		try{
			m_pk_psndoc_sub_bField = new StringField();
			// 属性的名称
			m_pk_psndoc_sub_bField.setName("pk_psndoc_sub_b");
			// 属性的描述
			m_pk_psndoc_sub_bField.setLabel("null");
			// 请添加对本属性的期它描述：

		}catch(Throwable exception){
			handleException(exception);
		}
	}
	return m_pk_psndoc_sub_bField;
}
/**
 * FieldObject的Getter方法。
 *
 * 创建日期：(2003-6-10)
 * @return nc.vo.pub.FieldObject
 */
public static StringField getPk_psndoc_subField() {

	if(m_pk_psndoc_subField == null){
		try{
			m_pk_psndoc_subField = new StringField();
			// 属性的名称
			m_pk_psndoc_subField.setName("pk_psndoc_sub");
			// 属性的描述
			m_pk_psndoc_subField.setLabel("null");
			// 请添加对本属性的期它描述：

		}catch(Throwable exception){
			handleException(exception);
		}
	}
	return m_pk_psndoc_subField;
}
/**
 * FieldObject的Getter方法。
 *
 * 创建日期：(2003-6-10)
 * @return nc.vo.pub.FieldObject
 */
public static StringField getPk_wa_itemField() {

	if(m_pk_wa_itemField == null){
		try{
			m_pk_wa_itemField = new StringField();
			// 属性的名称
			m_pk_wa_itemField.setName("pk_wa_item");
			// 属性的描述
			m_pk_wa_itemField.setLabel("null");
			// 请添加对本属性的期它描述：

		}catch(Throwable exception){
			handleException(exception);
		}
	}
	return m_pk_wa_itemField;
}
/**
 * FieldObject的Getter方法。
 *
 * 创建日期：(2003-6-10)
 * @return nc.vo.pub.FieldObject
 */
public static StringField getPk_wa_pralvField() {

	if(m_pk_wa_pralvField == null){
		try{
			m_pk_wa_pralvField = new StringField();
			// 属性的名称
			m_pk_wa_pralvField.setName("pk_wa_pralv");
			// 属性的描述
			m_pk_wa_pralvField.setLabel("null");
			// 请添加对本属性的期它描述：

		}catch(Throwable exception){
			handleException(exception);
		}
	}
	return m_pk_wa_pralvField;
}
/**
 * FieldObject的Getter方法。
 *
 * 创建日期：(2003-6-10)
 * @return nc.vo.pub.FieldObject
 */
public static StringField getPk_wa_seclvField() {

	if(m_pk_wa_seclvField == null){
		try{
			m_pk_wa_seclvField = new StringField();
			// 属性的名称
			m_pk_wa_seclvField.setName("pk_wa_seclv");
			// 属性的描述
			m_pk_wa_seclvField.setLabel("null");
			// 请添加对本属性的期它描述：

		}catch(Throwable exception){
			handleException(exception);
		}
	}
	return m_pk_wa_seclvField;
}
/**
 * FieldObject的Getter方法。
 *
 * 创建日期：(2003-6-10)
 * @return nc.vo.pub.FieldObject
 */
public static UFDoubleField getNmoneyField() {

	if(m_nmoneyField == null){
		try{
			m_nmoneyField = new UFDoubleField();
			// 属性的名称
			m_nmoneyField.setName("nmoney");
			// 属性的描述
			m_nmoneyField.setLabel("null");
			// 请添加对本属性的期它描述：

		}catch(Throwable exception){
			handleException(exception);
		}
	}
	return m_nmoneyField;
}
/**
 * 返回这个ValueObject类的所有FieldObject对象的集合。
 *
 * 创建日期：(2003-6-10)
 * @return nc.vo.pub.FieldObject[]
 */
public FieldObject[] getFields() {

	FieldObject[] fields = {getPk_psndoc_sub_bField(), getPk_psndoc_subField(), getPk_wa_itemField(), getPk_wa_pralvField(), getPk_wa_seclvField(), getNmoneyField()};

	return fields;
}
}