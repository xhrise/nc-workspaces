/***************************************************************\
 *     The skeleton of this class is generated by an automatic *
 * code generator for NC product.                              *
\***************************************************************/

package nc.vo.hi.hi_401;

import java.util.ArrayList;

import nc.vo.ml.NCLangRes4VoTransl;
import nc.vo.pub.*;
import nc.vo.pub.lang.*;

/**
 * 此处插入类型说明。
 * 
 * 创建日期：(2003-1-5)
 * @author：
 */
public class ChgbillVO extends CircularlyAccessibleValueObject {

 public String m_pk_chgbill;
 public String m_applicant;
 public UFDate m_applydate;
 public Integer m_approvestatus;
 public String m_censor;
 public String m_chgbillcode;
 public String m_chgbillnote;
 public String m_cuserid;
 public UFDate m_execdate;
 public Integer m_execstatus;
 public String m_pk_chgbilltype;
 public String m_pk_corp;
 public String m_busitypeID;

 /**
  *     描述上面属性的FieldObjects。主要用于系统工具中，
  * 业务代码中不会用到下面的FieldObjects。
  */
 private static StringField m_pk_chgbillField;
 private static StringField m_applicantField;
 private static UFDateField m_applydateField;
 private static IntegerField m_approvestatusField;
 private static StringField m_censorField;
 private static StringField m_chgbillcodeField;
 private static StringField m_chgbillnoteField;
 private static StringField m_cuseridField;
 private static UFDateField m_execdateField;
 private static IntegerField m_execstatusField;
 private static StringField m_pk_chgbilltypeField;
 private static StringField m_pk_corpField;
 private static StringField m_busitypeIDField;
/**
 * 使用主键字段进行初始化的构造子。
 *
 * 创建日期：(2003-1-5)
 */
public ChgbillVO() {

}
/**
 * 使用主键进行初始化的构造子。
 *
 * 创建日期：(2003-1-5)
 * @param ??fieldNameForMethod?? 主键值
 */
public ChgbillVO(String newPk_chgbill) {

	// 为主键字段赋值:
	m_pk_chgbill = newPk_chgbill;
}
/**
 * 根类Object的方法,克隆这个VO对象。
 *
 * 创建日期：(2003-1-5)
 */
public Object clone() {

	// 复制基类内容并创建新的VO对象：
	Object o = null;
	try {
		o = super.clone();
	} catch (Exception e) {}
	ChgbillVO chgbill = (ChgbillVO)o;

	// 你在下面复制本VO对象的所有属性：

	return chgbill;
}
/**
 * 返回数值对象的显示名称。
 *
 * 创建日期：(2003-1-5)
 * @return java.lang.String 返回数值对象的显示名称。
 */
public String getEntityName() {

	return "Chgbill";
}
/**
 * 返回对象标识，用来唯一定位对象。
 *
 * 创建日期：(2003-1-5)
 * @return String
 */
public String getPrimaryKey() {

	return m_pk_chgbill;
}
/**
 * 设置对象标识，用来唯一定位对象。
 *
 * 创建日期：(2003-1-5)
 * @param m_pk_chgbill String 
 */
public void setPrimaryKey(String newPk_chgbill) {

	m_pk_chgbill = newPk_chgbill;
}
/**
 * 属性m_pk_chgbill的Getter方法。
 *
 * 创建日期：(2003-1-5)
 * @return String
 */
public String getPk_chgbill() {
	return m_pk_chgbill;
}
/**
 * 属性m_applicant的Getter方法。
 *
 * 创建日期：(2003-1-5)
 * @return String
 */
public String getApplicant() {
	return m_applicant;
}
/**
 * 属性m_applydate的Getter方法。
 *
 * 创建日期：(2003-1-5)
 * @return UFDate
 */
public UFDate getApplydate() {
	return m_applydate;
}
/**
 * 属性m_approvestatus的Getter方法。
 *
 * 创建日期：(2003-1-5)
 * @return Integer
 */
public Integer getApprovestatus() {
	return m_approvestatus;
}
/**
 * 属性m_censor的Getter方法。
 *
 * 创建日期：(2003-1-5)
 * @return String
 */
public String getCensor() {
	return m_censor;
}
/**
 * 属性m_chgbillcode的Getter方法。
 *
 * 创建日期：(2003-1-5)
 * @return String
 */
public String getChgbillcode() {
	return m_chgbillcode;
}
/**
 * 属性m_chgbillnote的Getter方法。
 *
 * 创建日期：(2003-1-5)
 * @return String
 */
public String getChgbillnote() {
	return m_chgbillnote;
}
/**
 * 属性m_cuserid的Getter方法。
 *
 * 创建日期：(2003-1-5)
 * @return String
 */
public String getCuserid() {
	return m_cuserid;
}
/**
 * 属性m_execdate的Getter方法。
 *
 * 创建日期：(2003-1-5)
 * @return UFDate
 */
public UFDate getExecdate() {
	return m_execdate;
}
/**
 * 属性m_execstatus的Getter方法。
 *
 * 创建日期：(2003-1-5)
 * @return Integer
 */
public Integer getExecstatus() {
	return m_execstatus;
}
/**
 * 属性m_pk_chgbilltype的Getter方法。
 *
 * 创建日期：(2003-1-5)
 * @return String
 */
public String getPk_chgbilltype() {
	return m_pk_chgbilltype;
}
/**
 * 属性m_pk_corp的Getter方法。
 *
 * 创建日期：(2003-1-5)
 * @return String
 */
public String getPk_corp() {
	return m_pk_corp;
}
/**
 * 属性m_busitypeID的Getter方法。
 *
 * 创建日期：(2003-1-5)
 * @return String
 */
public String getBusitypeID() {
	return m_busitypeID;
}
/**
 * 属性m_pk_chgbill的setter方法。
 *
 * 创建日期：(2003-1-5)
 * @param newM_pk_chgbill String
 */
public void setPk_chgbill(String newPk_chgbill) {

	m_pk_chgbill = newPk_chgbill;
}
/**
 * 属性m_applicant的setter方法。
 *
 * 创建日期：(2003-1-5)
 * @param newM_applicant String
 */
public void setApplicant(String newApplicant) {

	m_applicant = newApplicant;
}
/**
 * 属性m_applydate的setter方法。
 *
 * 创建日期：(2003-1-5)
 * @param newM_applydate UFDate
 */
public void setApplydate(UFDate newApplydate) {

	m_applydate = newApplydate;
}
/**
 * 属性m_approvestatus的setter方法。
 *
 * 创建日期：(2003-1-5)
 * @param newM_approvestatus Integer
 */
public void setApprovestatus(Integer newApprovestatus) {

	m_approvestatus = newApprovestatus;
}
/**
 * 属性m_censor的setter方法。
 *
 * 创建日期：(2003-1-5)
 * @param newM_censor String
 */
public void setCensor(String newCensor) {

	m_censor = newCensor;
}
/**
 * 属性m_chgbillcode的setter方法。
 *
 * 创建日期：(2003-1-5)
 * @param newM_chgbillcode String
 */
public void setChgbillcode(String newChgbillcode) {

	m_chgbillcode = newChgbillcode;
}
/**
 * 属性m_chgbillnote的setter方法。
 *
 * 创建日期：(2003-1-5)
 * @param newM_chgbillnote String
 */
public void setChgbillnote(String newChgbillnote) {

	m_chgbillnote = newChgbillnote;
}
/**
 * 属性m_cuserid的setter方法。
 *
 * 创建日期：(2003-1-5)
 * @param newM_cuserid String
 */
public void setCuserid(String newCuserid) {

	m_cuserid = newCuserid;
}
/**
 * 属性m_execdate的setter方法。
 *
 * 创建日期：(2003-1-5)
 * @param newM_execdate UFDate
 */
public void setExecdate(UFDate newExecdate) {

	m_execdate = newExecdate;
}
/**
 * 属性m_execstatus的setter方法。
 *
 * 创建日期：(2003-1-5)
 * @param newM_execstatus Integer
 */
public void setExecstatus(Integer newExecstatus) {

	m_execstatus = newExecstatus;
}
/**
 * 属性m_pk_chgbilltype的setter方法。
 *
 * 创建日期：(2003-1-5)
 * @param newM_pk_chgbilltype String
 */
public void setPk_chgbilltype(String newPk_chgbilltype) {

	m_pk_chgbilltype = newPk_chgbilltype;
}
/**
 * 属性m_pk_corp的setter方法。
 *
 * 创建日期：(2003-1-5)
 * @param newM_pk_corp String
 */
public void setPk_corp(String newPk_corp) {

	m_pk_corp = newPk_corp;
}
/**
 * 属性m_busitypeID的setter方法。
 *
 * 创建日期：(2003-1-5)
 * @param newM_busitypeID String
 */
public void setBusitypeID(String newBusitypeID) {

	m_busitypeID = newBusitypeID;
}
/**
 * 验证对象各属性之间的数据逻辑正确性。
 *
 * 创建日期：(2003-1-5)
 * @exception nc.vo.pub.ValidationException 如果验证失败，抛出
 *     ValidationException，对错误进行解释。
 */
public void validate() throws ValidationException {

	ArrayList errFields = new ArrayList(); // errFields record those null fields that cannot be null.
	// 检查是否为不允许空的字段赋了空值，你可能需要修改下面的提示信息：
	if (m_pk_chgbill == null) {
		errFields.add(new String("m_pk_chgbill"));
	}
	// construct the exception message:
	StringBuffer message = new StringBuffer();
//	message.append("下列字段不能为空：");
	message.append(nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID(
			"600700", "UPP600700-000346")/* @res "下列字段不能为空：" */);
	if (errFields.size() > 0) {
		String[] temp = (String[]) errFields.toArray(new String[0]);
		message.append(temp[0]);
		for ( int i= 1; i < temp.length; i++ ) {
			message.append("、");
			message.append(temp[i]);
		}
		// throw the exception:
		throw new NullFieldException(message.toString());
	}
}
/**
 * <p>需要在一个循环中访问的属性的名称数组。
 * <p>
 * 创建日期：(??Date??)
 * @return java.lang.String[]
 */
public java.lang.String[] getAttributeNames() {

	return new String[]{ "applicant", "applydate", "approvestatus", "censor", "chgbillcode", "chgbillnote", "cuserid", "execdate", "execstatus", "pk_chgbilltype", "pk_corp", "busitypeID" };
}
/**
 *  <p>根据一个属性名称字符串该属性的值。
 *  <p>
 * 创建日期：(2003-1-5)
 * @param key java.lang.String
 */
public Object getAttributeValue(String attributeName) {

	if (attributeName.equals("pk_chgbill")) {
		return m_pk_chgbill;
	}
	else if (attributeName.equals("applicant")) {
		return m_applicant;
	}
	else if (attributeName.equals("applydate")) {
		return m_applydate;
	}
	else if (attributeName.equals("approvestatus")) {
		return m_approvestatus;
	}
	else if (attributeName.equals("censor")) {
		return m_censor;
	}
	else if (attributeName.equals("chgbillcode")) {
		return m_chgbillcode;
	}
	else if (attributeName.equals("chgbillnote")) {
		return m_chgbillnote;
	}
	else if (attributeName.equals("cuserid")) {
		return m_cuserid;
	}
	else if (attributeName.equals("execdate")) {
		return m_execdate;
	}
	else if (attributeName.equals("execstatus")) {
		return m_execstatus;
	}
	else if (attributeName.equals("pk_chgbilltype")) {
		return m_pk_chgbilltype;
	}
	else if (attributeName.equals("pk_corp")) {
		return m_pk_corp;
	}
	else if (attributeName.equals("busitypeID")) {
		return m_busitypeID;
	}
	return null;
}
/**
 *  <p>对参数name对型的属性设置值。
 *  <p>
 * 创建日期：(2003-1-5)
 * @param key java.lang.String
 */
public void setAttributeValue(String name, Object value) {

	try {
		if (name.equals("pk_chgbill")) {
			m_pk_chgbill = (String) value;
		}
		else if (name.equals("applicant")) {
			m_applicant = (String) value;
		}
		else if (name.equals("applydate")) {
			m_applydate = (UFDate) value;
		}
		else if (name.equals("approvestatus")) {
			m_approvestatus = (Integer) value;
		}
		else if (name.equals("censor")) {
			m_censor = (String) value;
		}
		else if (name.equals("chgbillcode")) {
			m_chgbillcode = (String) value;
		}
		else if (name.equals("chgbillnote")) {
			m_chgbillnote = (String) value;
		}
		else if (name.equals("cuserid")) {
			m_cuserid = (String) value;
		}
		else if (name.equals("execdate")) {
			m_execdate = (UFDate) value;
		}
		else if (name.equals("execstatus")) {
			m_execstatus = (Integer) value;
		}
		else if (name.equals("pk_chgbilltype")) {
			m_pk_chgbilltype = (String) value;
		}
		else if (name.equals("pk_corp")) {
			m_pk_corp = (String) value;
		}
		else if (name.equals("busitypeID")) {
			m_busitypeID = (String) value;
		}
	}
	catch (ClassCastException e) {
//		throw new ClassCastException("setAttributeValue方法中为 " + name + " 赋值时类型转换错误！（值：" + value + "）");
		throw new ClassCastException("setAttributeValue" + 
				NCLangRes4VoTransl.getNCLangRes().getStrByID("600700", "UPP600700-000374")/* @res "方法中为 " */ + 
				name + 
				NCLangRes4VoTransl.getNCLangRes().getStrByID("600700", "UPP600700-000349")/* @res " 赋值时类型转换错误！（值：" */ +
				value + "）");
	}
}
/**
 * FieldObject的Getter方法。
 *
 * 创建日期：(2003-1-5)
 * @return nc.vo.pub.FieldObject
 */
public static StringField getPk_chgbillField() {

	if(m_pk_chgbillField == null){
		try{
			m_pk_chgbillField = new StringField();
			// 属性的名称
			m_pk_chgbillField.setName("pk_chgbill");
			// 属性的描述
			m_pk_chgbillField.setLabel("null");
			// 请添加对本属性的期它描述：

		}catch(Throwable exception){
			handleException(exception);
		}
	}
	return m_pk_chgbillField;
}
/**
 * FieldObject的Getter方法。
 *
 * 创建日期：(2003-1-5)
 * @return nc.vo.pub.FieldObject
 */
public static StringField getApplicantField() {

	if(m_applicantField == null){
		try{
			m_applicantField = new StringField();
			// 属性的名称
			m_applicantField.setName("applicant");
			// 属性的描述
			m_applicantField.setLabel("null");
			// 请添加对本属性的期它描述：

		}catch(Throwable exception){
			handleException(exception);
		}
	}
	return m_applicantField;
}
/**
 * FieldObject的Getter方法。
 *
 * 创建日期：(2003-1-5)
 * @return nc.vo.pub.FieldObject
 */
public static UFDateField getApplydateField() {

	if(m_applydateField == null){
		try{
			m_applydateField = new UFDateField();
			// 属性的名称
			m_applydateField.setName("applydate");
			// 属性的描述
			m_applydateField.setLabel("null");
			// 请添加对本属性的期它描述：

		}catch(Throwable exception){
			handleException(exception);
		}
	}
	return m_applydateField;
}
/**
 * FieldObject的Getter方法。
 *
 * 创建日期：(2003-1-5)
 * @return nc.vo.pub.FieldObject
 */
public static IntegerField getApprovestatusField() {

	if(m_approvestatusField == null){
		try{
			m_approvestatusField = new IntegerField();
			// 属性的名称
			m_approvestatusField.setName("approvestatus");
			// 属性的描述
			m_approvestatusField.setLabel("null");
			// 请添加对本属性的期它描述：

		}catch(Throwable exception){
			handleException(exception);
		}
	}
	return m_approvestatusField;
}
/**
 * FieldObject的Getter方法。
 *
 * 创建日期：(2003-1-5)
 * @return nc.vo.pub.FieldObject
 */
public static StringField getCensorField() {

	if(m_censorField == null){
		try{
			m_censorField = new StringField();
			// 属性的名称
			m_censorField.setName("censor");
			// 属性的描述
			m_censorField.setLabel("null");
			// 请添加对本属性的期它描述：

		}catch(Throwable exception){
			handleException(exception);
		}
	}
	return m_censorField;
}
/**
 * FieldObject的Getter方法。
 *
 * 创建日期：(2003-1-5)
 * @return nc.vo.pub.FieldObject
 */
public static StringField getChgbillcodeField() {

	if(m_chgbillcodeField == null){
		try{
			m_chgbillcodeField = new StringField();
			// 属性的名称
			m_chgbillcodeField.setName("chgbillcode");
			// 属性的描述
			m_chgbillcodeField.setLabel("null");
			// 请添加对本属性的期它描述：

		}catch(Throwable exception){
			handleException(exception);
		}
	}
	return m_chgbillcodeField;
}
/**
 * FieldObject的Getter方法。
 *
 * 创建日期：(2003-1-5)
 * @return nc.vo.pub.FieldObject
 */
public static StringField getChgbillnoteField() {

	if(m_chgbillnoteField == null){
		try{
			m_chgbillnoteField = new StringField();
			// 属性的名称
			m_chgbillnoteField.setName("chgbillnote");
			// 属性的描述
			m_chgbillnoteField.setLabel("null");
			// 请添加对本属性的期它描述：

		}catch(Throwable exception){
			handleException(exception);
		}
	}
	return m_chgbillnoteField;
}
/**
 * FieldObject的Getter方法。
 *
 * 创建日期：(2003-1-5)
 * @return nc.vo.pub.FieldObject
 */
public static StringField getCuseridField() {

	if(m_cuseridField == null){
		try{
			m_cuseridField = new StringField();
			// 属性的名称
			m_cuseridField.setName("cuserid");
			// 属性的描述
			m_cuseridField.setLabel("null");
			// 请添加对本属性的期它描述：

		}catch(Throwable exception){
			handleException(exception);
		}
	}
	return m_cuseridField;
}
/**
 * FieldObject的Getter方法。
 *
 * 创建日期：(2003-1-5)
 * @return nc.vo.pub.FieldObject
 */
public static UFDateField getExecdateField() {

	if(m_execdateField == null){
		try{
			m_execdateField = new UFDateField();
			// 属性的名称
			m_execdateField.setName("execdate");
			// 属性的描述
			m_execdateField.setLabel("null");
			// 请添加对本属性的期它描述：

		}catch(Throwable exception){
			handleException(exception);
		}
	}
	return m_execdateField;
}
/**
 * FieldObject的Getter方法。
 *
 * 创建日期：(2003-1-5)
 * @return nc.vo.pub.FieldObject
 */
public static IntegerField getExecstatusField() {

	if(m_execstatusField == null){
		try{
			m_execstatusField = new IntegerField();
			// 属性的名称
			m_execstatusField.setName("execstatus");
			// 属性的描述
			m_execstatusField.setLabel("null");
			// 请添加对本属性的期它描述：

		}catch(Throwable exception){
			handleException(exception);
		}
	}
	return m_execstatusField;
}
/**
 * FieldObject的Getter方法。
 *
 * 创建日期：(2003-1-5)
 * @return nc.vo.pub.FieldObject
 */
public static StringField getPk_chgbilltypeField() {

	if(m_pk_chgbilltypeField == null){
		try{
			m_pk_chgbilltypeField = new StringField();
			// 属性的名称
			m_pk_chgbilltypeField.setName("pk_chgbilltype");
			// 属性的描述
			m_pk_chgbilltypeField.setLabel("null");
			// 请添加对本属性的期它描述：

		}catch(Throwable exception){
			handleException(exception);
		}
	}
	return m_pk_chgbilltypeField;
}
/**
 * FieldObject的Getter方法。
 *
 * 创建日期：(2003-1-5)
 * @return nc.vo.pub.FieldObject
 */
public static StringField getPk_corpField() {

	if(m_pk_corpField == null){
		try{
			m_pk_corpField = new StringField();
			// 属性的名称
			m_pk_corpField.setName("pk_corp");
			// 属性的描述
			m_pk_corpField.setLabel("null");
			// 请添加对本属性的期它描述：

		}catch(Throwable exception){
			handleException(exception);
		}
	}
	return m_pk_corpField;
}
/**
 * FieldObject的Getter方法。
 *
 * 创建日期：(2003-1-5)
 * @return nc.vo.pub.FieldObject
 */
public static StringField getBusitypeIDField() {

	if(m_busitypeIDField == null){
		try{
			m_busitypeIDField = new StringField();
			// 属性的名称
			m_busitypeIDField.setName("busitypeID");
			// 属性的描述
			m_busitypeIDField.setLabel("null");
			// 请添加对本属性的期它描述：

		}catch(Throwable exception){
			handleException(exception);
		}
	}
	return m_busitypeIDField;
}
/**
 * 返回这个ValueObject类的所有FieldObject对象的集合。
 *
 * 创建日期：(2003-1-5)
 * @return nc.vo.pub.FieldObject[]
 */
public FieldObject[] getFields() {

	FieldObject[] fields = {getPk_chgbillField(), getApplicantField(), getApplydateField(), getApprovestatusField(), getCensorField(), getChgbillcodeField(), getChgbillnoteField(), getCuseridField(), getExecdateField(), getExecstatusField(), getPk_chgbilltypeField(), getPk_corpField(), getBusitypeIDField()};

	return fields;
}

 public String m_applicantname;
 private static StringField m_chgbillnameField;
 public String m_chgbilltypecode;
 public String m_chgbilltypename;
 public String m_cUserId;
 private static StringField m_cUserIdField;

/**
 * 属性m_applicant的Getter方法。
 *
 * 创建日期：(2002-3-21)
 * @return String
 */
public String getApplicantName() {
	return m_applicantname;
}

/**
 *  <p>根据一个属性名称字符串该属性的值。
 *  <p>
 * 创建日期：(2002-3-21)
 * @param key java.lang.String
 */
public String getAttributeValueDes(String attributeName) {

	if (getAttributeValue(attributeName) != null)
		return getAttributeValue(attributeName).toString();
	else
		return null;
}

/**
 * FieldObject的Getter方法。
 *
 * 创建日期：(2002-3-21)
 * @return nc.vo.pub.FieldObject
 */
public static StringField getChgbillnameField() {

	if(m_chgbillnameField == null){
		try{
			m_chgbillnameField = new StringField();
			// 属性的名称
			m_chgbillnameField.setName("chgbillname");
			// 属性的描述
			m_chgbillnameField.setLabel("null");
			// 请添加对本属性的期它描述：

		}catch(Throwable exception){
			handleException(exception);
		}
	}
	return m_chgbillnameField;
}

/**
 * 属性m_pk_chgbilltype的Getter方法。
 *
 * 创建日期：(2002-3-21)
 * @return String
 */
public String getChgbilltypeCode() {
	return m_chgbilltypecode;
}

/**
 * 属性m_pk_chgbilltype的Getter方法。
 *
 * 创建日期：(2002-3-21)
 * @return String
 */
public String getChgbilltypeName() {
	return m_chgbilltypename;
}

/**
 * 属性m_cUserId的Getter方法。
 *
 * 创建日期：(2002-3-21)
 * @return String
 */
public String getCUserId() {
	return m_cUserId;
}

/**
 * FieldObject的Getter方法。
 *
 * 创建日期：(2002-3-21)
 * @return nc.vo.pub.FieldObject
 */
public static StringField getCUserIdField() {

	if(m_cUserIdField == null){
		try{
			m_cUserIdField = new StringField();
			// 属性的名称
			m_cUserIdField.setName("cUserId");
			// 属性的描述
			m_cUserIdField.setLabel("null");
			// 请添加对本属性的期它描述：

		}catch(Throwable exception){
			handleException(exception);
		}
	}
	return m_cUserIdField;
}

/**
 * 属性m_applicant的setter方法。
 *
 * 创建日期：(2002-3-21)
 * @param newM_applicant String
 */
public void setApplicantName(String newApplicantName) {

	m_applicantname = newApplicantName;
}

/**
 * 属性m_pk_chgbilltype的setter方法。
 *
 * 创建日期：(2002-3-21)
 * @param newM_pk_chgbilltype String
 */
public void setChgbilltypecode(String newChgbilltypecode) {

	m_chgbilltypecode = newChgbilltypecode;
}

/**
 * 属性m_pk_chgbilltype的setter方法。
 *
 * 创建日期：(2002-3-21)
 * @param newM_pk_chgbilltype String
 */
public void setChgbilltypename(String newChgbilltypename) {

	m_chgbilltypename = newChgbilltypename;
}

/**
 * 属性m_cUserId的setter方法。
 *
 * 创建日期：(2002-3-21)
 * @param newM_cUserId String
 */
public void setCUserId(String newCUserId) {

	m_cUserId = newCUserId;
}
}