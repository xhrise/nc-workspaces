/***************************************************************\
 *     The skeleton of this class is generated by an automatic *
 * code generator for NC product.                              *
\***************************************************************/

package nc.vo.hi.hi_401;

import java.util.ArrayList;

import nc.vo.ml.NCLangRes4VoTransl;
import nc.vo.pub.*;
import nc.vo.pub.lang.*;

/**
 * 此处插入类型说明。
 * 
 * 创建日期：(2002-3-21)
 * @author：tianhb
 */
public class ChgbillnodeVO extends CircularlyAccessibleValueObject {

	public String m_pk_chgbillnode;
	public String m_pk_chgbill;
	public Integer m_nodenum;
	public String m_approver;
	public UFDate m_approvedate;
	public String m_approveidea;

	/**
	 *     描述上面属性的FieldObjects。主要用于系统工具中，
	 * 业务代码中不会用到下面的FieldObjects。
	 */
	private static StringField m_pk_chgbillnodeField;
	private static StringField m_pk_chgbillField;
	private static IntegerField m_nodenumField;
	private static StringField m_approverField;
	private static UFDateField m_approvedateField;
	private static StringField m_approveideaField;
/**
 * 使用主键字段进行初始化的构造子。
 *
 * 创建日期：(2002-3-21)
 */
public ChgbillnodeVO() {

}
/**
 * 使用主键进行初始化的构造子。
 *
 * 创建日期：(2002-3-21)
 * @param ??fieldNameForMethod?? 主键值
 */
public ChgbillnodeVO(String newPk_chgbillnode) {

	// 为主键字段赋值:
	m_pk_chgbillnode = newPk_chgbillnode;
}
/**
 * 根类Object的方法,克隆这个VO对象。
 *
 * 创建日期：(2002-3-21)
 */
public Object clone() {

	// 复制基类内容并创建新的VO对象：
	Object o = null;
	try {
		o = super.clone();
	} catch (Exception e) {}
	ChgbillnodeVO chgbillnode = (ChgbillnodeVO)o;

	// 你在下面复制本VO对象的所有属性：

	return chgbillnode;
}
/**
 * 返回数值对象的显示名称。
 *
 * 创建日期：(2002-3-21)
 * @return java.lang.String 返回数值对象的显示名称。
 */
public String getEntityName() {

	return "Chgbillnode";
}
/**
 * 返回对象标识，用来唯一定位对象。
 *
 * 创建日期：(2002-3-21)
 * @return String
 */
public String getPrimaryKey() {

	return m_pk_chgbillnode;
}
/**
 * 设置对象标识，用来唯一定位对象。
 *
 * 创建日期：(2002-3-21)
 * @param m_pk_chgbillnode String 
 */
public void setPrimaryKey(String newPk_chgbillnode) {

	m_pk_chgbillnode = newPk_chgbillnode;
}
/**
 * 属性m_pk_chgbillnode的Getter方法。
 *
 * 创建日期：(2002-3-21)
 * @return String
 */
public String getPk_chgbillnode() {
	return m_pk_chgbillnode;
}
/**
 * 属性m_pk_chgbill的Getter方法。
 *
 * 创建日期：(2002-3-21)
 * @return String
 */
public String getPk_chgbill() {
	return m_pk_chgbill;
}
/**
 * 属性m_nodenum的Getter方法。
 *
 * 创建日期：(2002-3-21)
 * @return Integer
 */
public Integer getNodenum() {
	return m_nodenum;
}
/**
 * 属性m_approver的Getter方法。
 *
 * 创建日期：(2002-3-21)
 * @return String
 */
public String getApprover() {
	return m_approver;
}
/**
 * 属性m_approvedate的Getter方法。
 *
 * 创建日期：(2002-3-21)
 * @return UFDate
 */
public UFDate getApprovedate() {
	return m_approvedate;
}
/**
 * 属性m_approveidea的Getter方法。
 *
 * 创建日期：(2002-3-21)
 * @return String
 */
public String getApproveidea() {
	return m_approveidea;
}
/**
 * 属性m_pk_chgbillnode的setter方法。
 *
 * 创建日期：(2002-3-21)
 * @param newM_pk_chgbillnode String
 */
public void setPk_chgbillnode(String newPk_chgbillnode) {

	m_pk_chgbillnode = newPk_chgbillnode;
}
/**
 * 属性m_pk_chgbill的setter方法。
 *
 * 创建日期：(2002-3-21)
 * @param newM_pk_chgbill String
 */
public void setPk_chgbill(String newPk_chgbill) {

	m_pk_chgbill = newPk_chgbill;
}
/**
 * 属性m_nodenum的setter方法。
 *
 * 创建日期：(2002-3-21)
 * @param newM_nodenum Integer
 */
public void setNodenum(Integer newNodenum) {

	m_nodenum = newNodenum;
}
/**
 * 属性m_approver的setter方法。
 *
 * 创建日期：(2002-3-21)
 * @param newM_approver String
 */
public void setApprover(String newApprover) {

	m_approver = newApprover;
}
/**
 * 属性m_approvedate的setter方法。
 *
 * 创建日期：(2002-3-21)
 * @param newM_approvedate UFDate
 */
public void setApprovedate(UFDate newApprovedate) {

	m_approvedate = newApprovedate;
}
/**
 * 属性m_approveidea的setter方法。
 *
 * 创建日期：(2002-3-21)
 * @param newM_approveidea String
 */
public void setApproveidea(String newApproveidea) {

	m_approveidea = newApproveidea;
}
/**
 * 验证对象各属性之间的数据逻辑正确性。
 *
 * 创建日期：(2002-3-21)
 * @exception nc.vo.pub.ValidationException 如果验证失败，抛出
 *     ValidationException，对错误进行解释。
 */
public void validate() throws ValidationException {

	ArrayList errFields = new ArrayList(); // errFields record those null fields that cannot be null.
	// 检查是否为不允许空的字段赋了空值，你可能需要修改下面的提示信息：
	if (m_pk_chgbillnode == null) {
		errFields.add(new String("m_pk_chgbillnode"));
	}
	// construct the exception message:
	StringBuffer message = new StringBuffer();
//	message.append("下列字段不能为空：");
	message.append(nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID(
			"600700", "UPP600700-000346")/* @res "下列字段不能为空：" */);
	if (errFields.size() > 0) {
		String[] temp = (String[]) errFields.toArray(new String[0]);
		message.append(temp[0]);
		for ( int i= 1; i < temp.length; i++ ) {
			message.append("、");
			message.append(temp[i]);
		}
		// throw the exception:
		throw new NullFieldException(message.toString());
	}
}
/**
 * <p>需要在一个循环中访问的属性的名称数组。
 * <p>
 * 创建日期：(??Date??)
 * @return java.lang.String[]
 */
public java.lang.String[] getAttributeNames() {

	return new String[]{ "pk_chgbill", "nodenum", "approver", "approvedate", "approveidea" };
}
/**
 *  <p>根据一个属性名称字符串该属性的值。
 *  <p>
 * 创建日期：(2002-3-21)
 * @param key java.lang.String
 */
public Object getAttributeValue(String attributeName) {

	if (attributeName.equals("pk_chgbillnode")) {
		return m_pk_chgbillnode;
	}
	else if (attributeName.equals("pk_chgbill")) {
		return m_pk_chgbill;
	}
	else if (attributeName.equals("nodenum")) {
		return m_nodenum;
	}
	else if (attributeName.equals("approver")) {
		return m_approver;
	}
	else if (attributeName.equals("approvedate")) {
		return m_approvedate;
	}
	else if (attributeName.equals("approveidea")) {
		return m_approveidea;
	}
	else if (attributeName.equals("approvername")) {
		return m_approvername;
	}
	
	return null;
}
/**
 *  <p>对参数name对型的属性设置值。
 *  <p>
 * 创建日期：(2002-3-21)
 * @param key java.lang.String
 */
public void setAttributeValue(String name, Object value) {

	try {
		if (name.equals("pk_chgbillnode")) {
			m_pk_chgbillnode = (String) value;
		}
		else if (name.equals("pk_chgbill")) {
			m_pk_chgbill = (String) value;
		}
		else if (name.equals("nodenum")) {
			m_nodenum = (Integer) value;
		}
		else if (name.equals("approver")) {
			m_approver = (String) value;
		}
		else if (name.equals("approvedate")) {
			m_approvedate = (UFDate) value;
		}
		else if (name.equals("approveidea")) {
			m_approveidea = (String) value;
		}
		else if (name.equals("approvername")) {
			m_approvername = (String) value;
		}
	}
	catch (ClassCastException e) {
//		throw new ClassCastException("setAttributeValue方法中为 " + name + " 赋值时类型转换错误！（值：" + value + "）");
		throw new ClassCastException("setAttributeValue" + 
				NCLangRes4VoTransl.getNCLangRes().getStrByID("600700", "UPP600700-000374")/* @res "方法中为 " */ + 
				name + 
				NCLangRes4VoTransl.getNCLangRes().getStrByID("600700", "UPP600700-000349")/* @res " 赋值时类型转换错误！（值：" */ +
				value + "）");
	}
}
/**
 * FieldObject的Getter方法。
 *
 * 创建日期：(2002-3-21)
 * @return nc.vo.pub.FieldObject
 */
public static StringField getPk_chgbillnodeField() {

	if(m_pk_chgbillnodeField == null){
		try{
			m_pk_chgbillnodeField = new StringField();
			// 属性的名称
			m_pk_chgbillnodeField.setName("pk_chgbillnode");
			// 属性的描述
			m_pk_chgbillnodeField.setLabel("null");
			// 请添加对本属性的期它描述：

		}catch(Throwable exception){
			handleException(exception);
		}
	}
	return m_pk_chgbillnodeField;
}
/**
 * FieldObject的Getter方法。
 *
 * 创建日期：(2002-3-21)
 * @return nc.vo.pub.FieldObject
 */
public static StringField getPk_chgbillField() {

	if(m_pk_chgbillField == null){
		try{
			m_pk_chgbillField = new StringField();
			// 属性的名称
			m_pk_chgbillField.setName("pk_chgbill");
			// 属性的描述
			m_pk_chgbillField.setLabel("null");
			// 请添加对本属性的期它描述：

		}catch(Throwable exception){
			handleException(exception);
		}
	}
	return m_pk_chgbillField;
}
/**
 * FieldObject的Getter方法。
 *
 * 创建日期：(2002-3-21)
 * @return nc.vo.pub.FieldObject
 */
public static IntegerField getNodenumField() {

	if(m_nodenumField == null){
		try{
			m_nodenumField = new IntegerField();
			// 属性的名称
			m_nodenumField.setName("nodenum");
			// 属性的描述
			m_nodenumField.setLabel("null");
			// 请添加对本属性的期它描述：

		}catch(Throwable exception){
			handleException(exception);
		}
	}
	return m_nodenumField;
}
/**
 * FieldObject的Getter方法。
 *
 * 创建日期：(2002-3-21)
 * @return nc.vo.pub.FieldObject
 */
public static StringField getApproverField() {

	if(m_approverField == null){
		try{
			m_approverField = new StringField();
			// 属性的名称
			m_approverField.setName("approver");
			// 属性的描述
			m_approverField.setLabel("null");
			// 请添加对本属性的期它描述：

		}catch(Throwable exception){
			handleException(exception);
		}
	}
	return m_approverField;
}
/**
 * FieldObject的Getter方法。
 *
 * 创建日期：(2002-3-21)
 * @return nc.vo.pub.FieldObject
 */
public static UFDateField getApprovedateField() {

	if(m_approvedateField == null){
		try{
			m_approvedateField = new UFDateField();
			// 属性的名称
			m_approvedateField.setName("approvedate");
			// 属性的描述
			m_approvedateField.setLabel("null");
			// 请添加对本属性的期它描述：

		}catch(Throwable exception){
			handleException(exception);
		}
	}
	return m_approvedateField;
}
/**
 * FieldObject的Getter方法。
 *
 * 创建日期：(2002-3-21)
 * @return nc.vo.pub.FieldObject
 */
public static StringField getApproveideaField() {

	if(m_approveideaField == null){
		try{
			m_approveideaField = new StringField();
			// 属性的名称
			m_approveideaField.setName("approveidea");
			// 属性的描述
			m_approveideaField.setLabel("null");
			// 请添加对本属性的期它描述：

		}catch(Throwable exception){
			handleException(exception);
		}
	}
	return m_approveideaField;
}
/**
 * 返回这个ValueObject类的所有FieldObject对象的集合。
 *
 * 创建日期：(2002-3-21)
 * @return nc.vo.pub.FieldObject[]
 */
public FieldObject[] getFields() {

	FieldObject[] fields = {getPk_chgbillnodeField(), getPk_chgbillField(), getNodenumField(), getApproverField(), getApprovedateField(), getApproveideaField()};

	return fields;
}

	public String m_approvername;

/**
 * 属性m_approver的Getter方法。
 *
 * 创建日期：(2002-3-21)
 * @return String
 */
public String getApproverName() {
	return m_approvername;
}

/**
 *  <p>根据一个属性名称字符串该属性的值。
 *  <p>
 * 创建日期：(2002-3-21)
 * @param key java.lang.String
 */
public String getAttributeValueDes(String attributeName) {

	if (getAttributeValue(attributeName) != null)
		return getAttributeValue(attributeName).toString();
	else
		return null;
}

/**
 * 属性m_approver的setter方法。
 *
 * 创建日期：(2002-3-21)
 * @param newM_approver String
 */
public void setApprovername(String newApprovername) {

	m_approvername = newApprovername;
}
}