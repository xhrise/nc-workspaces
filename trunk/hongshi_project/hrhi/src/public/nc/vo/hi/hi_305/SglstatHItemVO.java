package nc.vo.hi.hi_305;

/***************************************************************\
 *     The skeleton of this class is generated by an automatic *
 * code generator for NC product.                              *
\***************************************************************/

import java.util.ArrayList;

import nc.vo.hr.utils.ml.HRPubRes;
import nc.vo.pub.*;
import nc.vo.pub.lang.*;

/**
 * 此处插入类型说明。
 * 
 * 创建日期：(2002-3-28)
 * @author：zhonghaijing
 */
public class SglstatHItemVO extends CircularlyAccessibleValueObject {

	public String m_pk_sglstat_b;
	public String m_pk_sglstat_h;
	public Integer m_statitemorder;
	public String m_statitemname;
	public String m_pk_setdict;
	public String m_statcondcode;
	public String m_pk_flddict;
	public String m_statcondname;
	public Integer m_statmode;
	public String m_enddate;
	public Integer m_datetype;
	public Integer m_datedecimal;

	/**
	 *     描述上面属性的FieldObjects。主要用于系统工具中，
	 * 业务代码中不会用到下面的FieldObjects。
	 */
	private static StringField m_pk_sglstat_bField;
	private static StringField m_pk_sglstat_hField;
	private static IntegerField m_statitemorderField;
	private static StringField m_statitemnameField;
	private static StringField m_pk_setdictField;
	private static StringField m_setcodeField;
	private static StringField m_pk_flddictField;
	private static StringField m_fldcodeField;
	private static IntegerField m_statmodeField;
	private static StringField m_enddateField;
	private static IntegerField m_datetypeField;
	private static IntegerField m_datedecimalField;
/**
 * 使用主键字段进行初始化的构造子。
 *
 * 创建日期：(2002-3-28)
 */
public SglstatHItemVO() {

}
/**
 * 使用主键进行初始化的构造子。
 *
 * 创建日期：(2002-3-28)
 * @param ??fieldNameForMethod?? 主键值
 */
public SglstatHItemVO(String newPk_sglstat_b) {

	// 为主键字段赋值:
	m_pk_sglstat_b = newPk_sglstat_b;
}
/**
 * 根类Object的方法,克隆这个VO对象。
 *
 * 创建日期：(2002-3-28)
 */
public Object clone() {

	// 复制基类内容并创建新的VO对象：
	Object o = null;
	try {
		o = super.clone();
	} catch (Exception e) {}
	SglstatHItemVO sglstatB = (SglstatHItemVO)o;

	// 你在下面复制本VO对象的所有属性：

	return sglstatB;
}
/**
 * <p>需要在一个循环中访问的属性的名称数组。
 * <p>
 * 创建日期：(??Date??)
 * @return java.lang.String[]
 */
public java.lang.String[] getAttributeNames() {

	return new String[]{ "pk_sglstat_h", "statitemorder", "statitemname", "pk_setdict", "statcondcode", "pk_flddict", "statcondname", "statmode", "pk_query_h","enddate","datetype","datedecimal","isCurDate"};
}
/**
 *  <p>根据一个属性名称字符串该属性的值。
 *  <p>
 * 创建日期：(2002-3-28)
 * @param key java.lang.String
 */
public Object getAttributeValue(String attributeName) {

	if (attributeName.equals("pk_sglstat_b")) {
		return m_pk_sglstat_b;
	}
	else if (attributeName.equals("pk_sglstat_h")) {
		return m_pk_sglstat_h;
	}
	else if (attributeName.equals("statitemorder")) {
		return m_statitemorder;
	}
	else if (attributeName.equals("statitemname")) {
		return m_statitemname;
	}
	else if (attributeName.equals("pk_setdict")) {
		return m_pk_setdict;
	}
	else if (attributeName.equals("statcondcode")) {
		return m_statcondcode;
	}
	else if (attributeName.equals("pk_flddict")) {
		return m_pk_flddict;
	}
	else if (attributeName.equals("statcondname")) {
		return m_statcondname;
	}
	else if (attributeName.equals("statmode")) {
		return m_statmode;
	}
	else if (attributeName.equals("enddate")) {
		return m_enddate;
	}
	else if (attributeName.equals("datetype")) {
		return m_datetype;
	}
	else if (attributeName.equals("datedecimal")) {
		return m_datedecimal;
	}
	else if (attributeName.equals("isCurDate")) {
		return m_isCurDate;
	}
	return null;
}
/**
 * 返回数值对象的显示名称。
 *
 * 创建日期：(2002-3-28)
 * @return java.lang.String 返回数值对象的显示名称。
 */
public String getEntityName() {

	return "SglstatB";
}
/**
 * 返回这个ValueObject类的所有FieldObject对象的集合。
 *
 * 创建日期：(2002-3-28)
 * @return nc.vo.pub.FieldObject[]
 */
public FieldObject[] getFields() {

	FieldObject[] fields = {getPk_sglstat_bField(), getPk_sglstat_hField(), getStatitemorderField(), getStatitemnameField(), getPk_setdictField(), getSetcodeField(), getPk_flddictField(), getFldcodeField(), getStatmodeField(),getenddateField(),getdatetypeField(),getdatedecimalField()};

	return fields;
}
/**
 * FieldObject的Getter方法。
 *
 * 创建日期：(2002-3-28)
 * @return nc.vo.pub.FieldObject
 */
public static StringField getFldcodeField() {

	if(m_fldcodeField == null){
		try{
			m_fldcodeField = new StringField();
			// 属性的名称
			m_fldcodeField.setName("fldcode");
			// 属性的描述
			m_fldcodeField.setLabel("null");
			// 请添加对本属性的期它描述：

		}catch(Throwable exception){
			handleException(exception);
		}
	}
	return m_fldcodeField;
}

/**
 * FieldObject的Getter方法。
 *
 * 创建日期：(2002-3-28)
 * @return nc.vo.pub.FieldObject
 */
public static IntegerField getdatedecimalField() {

	if(m_datedecimalField == null){
		try{
			m_datedecimalField = new IntegerField();
			// 属性的名称
			m_datedecimalField.setName("datedecimal");
			// 属性的描述
			m_datedecimalField.setLabel("null");
			// 请添加对本属性的期它描述：

		}catch(Throwable exception){
			handleException(exception);
		}
	}
	return m_datedecimalField;
}
/**
 * 属性m_pk_flddict的Getter方法。
 *
 * 创建日期：(2002-3-28)
 * @return String
 */
public String getPk_flddict() {
	return m_pk_flddict;
}
/**
 * 属性m_datedecimal的Getter方法。
 *
 * 创建日期：(2002-3-28)
 * @return Integer
 */
public Integer getdatedecimal() {
	return m_datedecimal;
}
/**
 * FieldObject的Getter方法。
 *
 * 创建日期：(2002-3-28)
 * @return nc.vo.pub.FieldObject
 */
public static StringField getPk_flddictField() {

	if(m_pk_flddictField == null){
		try{
			m_pk_flddictField = new StringField();
			// 属性的名称
			m_pk_flddictField.setName("pk_flddict");
			// 属性的描述
			m_pk_flddictField.setLabel("null");
			// 请添加对本属性的期它描述：

		}catch(Throwable exception){
			handleException(exception);
		}
	}
	return m_pk_flddictField;
}
/**
 * 属性m_pk_setdict的Getter方法。
 *
 * 创建日期：(2002-3-28)
 * @return String
 */
public String getPk_setdict() {
	return m_pk_setdict;
}
/**
 * FieldObject的Getter方法。
 *
 * 创建日期：(2002-3-28)
 * @return nc.vo.pub.FieldObject
 */
public static StringField getPk_setdictField() {

	if(m_pk_setdictField == null){
		try{
			m_pk_setdictField = new StringField();
			// 属性的名称
			m_pk_setdictField.setName("pk_setdict");
			// 属性的描述
			m_pk_setdictField.setLabel("null");
			// 请添加对本属性的期它描述：

		}catch(Throwable exception){
			handleException(exception);
		}
	}
	return m_pk_setdictField;
}
/**
 * 属性m_pk_sglstat_b的Getter方法。
 *
 * 创建日期：(2002-3-28)
 * @return String
 */
public String getPk_sglstat_b() {
	return m_pk_sglstat_b;
}
/**
 * FieldObject的Getter方法。
 *
 * 创建日期：(2002-3-28)
 * @return nc.vo.pub.FieldObject
 */
public static StringField getPk_sglstat_bField() {

	if(m_pk_sglstat_bField == null){
		try{
			m_pk_sglstat_bField = new StringField();
			// 属性的名称
			m_pk_sglstat_bField.setName("pk_sglstat_b");
			// 属性的描述
			m_pk_sglstat_bField.setLabel("null");
			// 请添加对本属性的期它描述：

		}catch(Throwable exception){
			handleException(exception);
		}
	}
	return m_pk_sglstat_bField;
}
/**
 * 属性m_pk_sglstat_h的Getter方法。
 *
 * 创建日期：(2002-3-28)
 * @return String
 */
public String getPk_sglstat_h() {
	return m_pk_sglstat_h;
}
/**
 * FieldObject的Getter方法。
 *
 * 创建日期：(2002-3-28)
 * @return nc.vo.pub.FieldObject
 */
public static StringField getPk_sglstat_hField() {

	if(m_pk_sglstat_hField == null){
		try{
			m_pk_sglstat_hField = new StringField();
			// 属性的名称
			m_pk_sglstat_hField.setName("pk_sglstat_h");
			// 属性的描述
			m_pk_sglstat_hField.setLabel("null");
			// 请添加对本属性的期它描述：

		}catch(Throwable exception){
			handleException(exception);
		}
	}
	return m_pk_sglstat_hField;
}
/**
 * 返回对象标识，用来唯一定位对象。
 *
 * 创建日期：(2002-3-28)
 * @return String
 */
public String getPrimaryKey() {

	return m_pk_sglstat_b;
}
/**
 * FieldObject的Getter方法。
 *
 * 创建日期：(2002-3-28)
 * @return nc.vo.pub.FieldObject
 */
public static StringField getSetcodeField() {

	if(m_setcodeField == null){
		try{
			m_setcodeField = new StringField();
			// 属性的名称
			m_setcodeField.setName("setcode");
			// 属性的描述
			m_setcodeField.setLabel("null");
			// 请添加对本属性的期它描述：

		}catch(Throwable exception){
			handleException(exception);
		}
	}
	return m_setcodeField;
}
/**
 * 属性m_fldcode的Getter方法。
 *
 * 创建日期：(2002-3-28)
 * @return String
 */
public String getStatcondcode() {
	return m_statcondcode;
}
/**
 * 属性m_setcode的Getter方法。
 *
 * 创建日期：(2002-3-28)
 * @return String
 */
public String getStatcondname() {
	return m_statcondname;
}
/**
 * 属性m_statitemname的Getter方法。
 *
 * 创建日期：(2002-3-28)
 * @return String
 */
public String getStatitemname() {
	return m_statitemname;
}
/**
 * FieldObject的Getter方法。
 *
 * 创建日期：(2002-3-28)
 * @return nc.vo.pub.FieldObject
 */
public static StringField getStatitemnameField() {

	if(m_statitemnameField == null){
		try{
			m_statitemnameField = new StringField();
			// 属性的名称
			m_statitemnameField.setName("statitemname");
			// 属性的描述
			m_statitemnameField.setLabel("null");
			// 请添加对本属性的期它描述：

		}catch(Throwable exception){
			handleException(exception);
		}
	}
	return m_statitemnameField;
}
/**
 * 属性m_statitemorder的Getter方法。
 *
 * 创建日期：(2002-3-28)
 * @return Integer
 */
public Integer getStatitemorder() {
	return m_statitemorder;
}
/**
 * FieldObject的Getter方法。
 *
 * 创建日期：(2002-3-28)
 * @return nc.vo.pub.FieldObject
 */
public static IntegerField getStatitemorderField() {

	if(m_statitemorderField == null){
		try{
			m_statitemorderField = new IntegerField();
			// 属性的名称
			m_statitemorderField.setName("statitemorder");
			// 属性的描述
			m_statitemorderField.setLabel("null");
			// 请添加对本属性的期它描述：

		}catch(Throwable exception){
			handleException(exception);
		}
	}
	return m_statitemorderField;
}
/**
 * 属性m_statmode的Getter方法。
 *
 * 创建日期：(2002-3-28)
 * @return Integer
 */
public Integer getStatmode() {
	return m_statmode;
}

/**
 * 属性m_enddate的Getter方法。
 *
 * 创建日期：(2002-3-28)
 * @return String
 */
public String getenddate() {
	return m_enddate;
}

/**
 * 属性m_datetype的Getter方法。
 *
 * 创建日期：(2002-3-28)
 * @return Integer
 */
public Integer getdatetype() {
	return m_datetype;
}

/**
 * FieldObject的Getter方法。
 *
 * 创建日期：(2002-3-28)
 * @return nc.vo.pub.FieldObject
 */
public static IntegerField getStatmodeField() {

	if(m_statmodeField == null){
		try{
			m_statmodeField = new IntegerField();
			// 属性的名称
			m_statmodeField.setName("statmode");
			// 属性的描述
			m_statmodeField.setLabel("null");
			// 请添加对本属性的期它描述：

		}catch(Throwable exception){
			handleException(exception);
		}
	}
	return m_statmodeField;
}

/**
 * FieldObject的Getter方法。
 *
 * 创建日期：(2002-3-28)
 * @return nc.vo.pub.FieldObject
 */
public static StringField getenddateField() {

	if(m_enddateField == null){
		try{
			m_enddateField = new StringField();
			// 属性的名称
			m_enddateField.setName("enddate");
			// 属性的描述
			m_enddateField.setLabel("null");
			// 请添加对本属性的期它描述：

		}catch(Throwable exception){
			handleException(exception);
		}
	}
	return m_enddateField;
}

/**
 * FieldObject的Getter方法。
 *
 * 创建日期：(2002-3-28)
 * @return nc.vo.pub.FieldObject
 */
public static IntegerField getdatetypeField() {

	if(m_datetypeField == null){
		try{
			m_datetypeField = new IntegerField();
			// 属性的名称
			m_datetypeField.setName("datetype");
			// 属性的描述
			m_datetypeField.setLabel("null");
			// 请添加对本属性的期它描述：

		}catch(Throwable exception){
			handleException(exception);
		}
	}
	return m_datetypeField;
}

/**
 *  <p>对参数name对型的属性设置值。
 *  <p>
 * 创建日期：(2002-3-28)
 * @param key java.lang.String
 */
public void setAttributeValue(String name, Object value) {

	try {
		if (name.equals("pk_sglstat_b")) {
			m_pk_sglstat_b = (String) value;
		} else
			if (name.equals("pk_sglstat_h")) {
				m_pk_sglstat_h = (String) value;
			} else
				if (name.equals("statitemorder")) {
					m_statitemorder = (Integer) value;
				} else
					if (name.equals("statitemname")) {
						m_statitemname = (String) value;
					} else
						if (name.equals("pk_setdict")) {
							m_pk_setdict = (String) value;
						} else
							if (name.equals("statcondcode")) {
								m_statcondcode = (String) value;
							} else
								if (name.equals("pk_flddict")) {
									m_pk_flddict = (String) value;
								} else
									if (name.equals("statcondname")) {
										m_statcondname = (String) value;
									} else
										if (name.equals("statmode")) {
											m_statmode = (Integer) value;
										} else
										  if (name.equals("enddate")) {
											m_enddate = (String) value;
										  } else
											if (name.equals("datetype")) {
											   m_datetype = (Integer) value;
											}                                          
	} catch (ClassCastException e) {
		throw new ClassCastException(HRPubRes.getClassCastErrMsg(name,value));//throw new ClassCastException("setAttributeValue方法中为 " + name + " 赋值时类型转换错误！（值：" + value + "）");
	}
}
/**
 * 属性m_pk_flddict的setter方法。
 *
 * 创建日期：(2002-3-28)
 * @param newM_pk_flddict String
 */
public void setPk_flddict(String newPk_flddict) {

	m_pk_flddict = newPk_flddict;
}
/**
 * 属性m_pk_setdict的setter方法。
 *
 * 创建日期：(2002-3-28)
 * @param newM_pk_setdict String
 */
public void setPk_setdict(String newPk_setdict) {

	m_pk_setdict = newPk_setdict;
}

/**
 * 属性m_datedecimal的setter方法。
 *
 * 创建日期：(2002-3-28)
 * @param newM_pk_setdict String
 */
public void setdatedecimal(Integer newdatedecimal) {

	m_datedecimal = newdatedecimal;
}
/**
 * 属性m_pk_sglstat_b的setter方法。
 *
 * 创建日期：(2002-3-28)
 * @param newM_pk_sglstat_b String
 */
public void setPk_sglstat_b(String newPk_sglstat_b) {

	m_pk_sglstat_b = newPk_sglstat_b;
}
/**
 * 属性m_pk_sglstat_h的setter方法。
 *
 * 创建日期：(2002-3-28)
 * @param newM_pk_sglstat_h String
 */
public void setPk_sglstat_h(String newPk_sglstat_h) {

	m_pk_sglstat_h = newPk_sglstat_h;
}
/**
 * 设置对象标识，用来唯一定位对象。
 *
 * 创建日期：(2002-3-28)
 * @param m_pk_sglstat_b String 
 */
public void setPrimaryKey(String newPk_sglstat_b) {

	m_pk_sglstat_b = newPk_sglstat_b;
}
/**
 * 属性m_setcode的setter方法。
 *
 * 创建日期：(2002-3-28)
 * @param newM_setcode String
 */
public void setStatcondcode(String newStatcondcode) {

	m_statcondcode = newStatcondcode;
}
/**
 * 属性m_fldcode的setter方法。
 *
 * 创建日期：(2002-3-28)
 * @param newM_fldcode String
 */
public void setStatcondname(String newStatcondname) {

	m_statcondname = newStatcondname;
}
/**
 * 属性m_statitemname的setter方法。
 *
 * 创建日期：(2002-3-28)
 * @param newM_statitemname String
 */
public void setStatitemname(String newStatitemname) {

	m_statitemname = newStatitemname;
}
/**
 * 属性m_statitemorder的setter方法。
 *
 * 创建日期：(2002-3-28)
 * @param newM_statitemorder Integer
 */
public void setStatitemorder(Integer newStatitemorder) {

	m_statitemorder = newStatitemorder;
}
/**
 * 属性m_statmode的setter方法。
 *
 * 创建日期：(2002-3-28)
 * @param newM_statmode Integer
 */
public void setStatmode(Integer newStatmode) {

	m_statmode = newStatmode;
}
/**
 * 属性m_enddate的setter方法。
 *
 * 创建日期：(2002-3-28)
 * @param newM_enddate String
 */
public void setEnddate(String newEnddate) {

	m_enddate = newEnddate;
}
/**
 * 属性m_datetype的setter方法。
 *
 * 创建日期：(2002-3-28)
 * @param newM_datetype Integer
 */
public void setDatetype(Integer newDatetype) {

	m_datetype = newDatetype;
}
/**
 * 验证对象各属性之间的数据逻辑正确性。
 *
 * 创建日期：(2002-3-28)
 * @exception nc.vo.pub.ValidationException 如果验证失败，抛出
 *     ValidationException，对错误进行解释。
 */
public void validate() throws ValidationException {

	ArrayList errFields = new ArrayList(); // errFields record those null fields that cannot be null.
	// 检查是否为不允许空的字段赋了空值，你可能需要修改下面的提示信息：
	if (m_pk_sglstat_b == null) {
		errFields.add(new String("m_pk_sglstat_b"));
	}
	// construct the exception message:
	StringBuffer message = new StringBuffer();
	message.append(nc.vo.bd.IBDMsg.MSG_NULL_FIELD);//message.append("下列字段不能为空：");
	if (errFields.size() > 0) {
		String[] temp = (String[]) errFields.toArray(new String[0]);
		message.append(temp[0]);
		for ( int i= 1; i < temp.length; i++ ) {
			message.append(",");//message.append("、");
			message.append(temp[i]);
		}
		// throw the exception:
		throw new NullFieldException(message.toString());
	}
}

	private nc.vo.pub.query.ConditionVO[] conditionVOs = null;
	public String m_isCurDate;
	private nc.vo.hi.hi_305.QueryBsVO[] queryBsVOs = null;

/**
 * 此处插入方法描述。
 * 创建日期：(2004-5-14 10:26:32)
 * @return nc.vo.pub.query.ConditionVO[]
 */
public nc.vo.pub.query.ConditionVO[] getConditionVOs() {
	if(conditionVOs==null){
		if(queryBsVOs==null||queryBsVOs.length==0){
			return null;
		}else{
			conditionVOs = new nc.vo.pub.query.ConditionVO[queryBsVOs.length];
			for(int i=0;i<queryBsVOs.length;i++){
				nc.vo.pub.query.ConditionVO condvo = new nc.vo.pub.query.ConditionVO();
				condvo.setLogic(queryBsVOs[i].getLogicop().booleanValue());
				condvo.setNoLeft(queryBsVOs[i].getIsleft().booleanValue());
				condvo.setNoRight(queryBsVOs[i].getIsright().booleanValue());
				condvo.setTableCode(queryBsVOs[i].getTablecode());
				condvo.setTableName(queryBsVOs[i].getTablename());
				condvo.setFieldCode(queryBsVOs[i].getFieldcode());
				condvo.setFieldName(queryBsVOs[i].getFieldname());
				condvo.setDataType(queryBsVOs[i].getDatatype());
				if(queryBsVOs[i].getDatatype()==5){
					nc.vo.pub.query.RefResultVO refResVO = new nc.vo.pub.query.RefResultVO();
					refResVO.setRefPK(queryBsVOs[i].getQueryvalue());
					refResVO.setRefName(queryBsVOs[i].getShowvalue());
					condvo.setRefResult(refResVO);
				}else{
					condvo.setValue(queryBsVOs[i].getShowvalue());
				}
				condvo.setOperaCode(queryBsVOs[i].getOperaop());
				condvo.setOperaName(queryBsVOs[i].getOperaname());
				conditionVOs[i]=condvo;
			}
		}
	}
	return conditionVOs;
}

/**
 * 此处插入方法描述。
 * 创建日期：(2004-5-17 14:51:42)
 * @return boolean
 */
public String getIsCurDate() {
	return m_isCurDate;
}

/**
 * 此处插入方法描述。
 * 创建日期：(2004-5-13 21:12:30)
 * @return nc.vo.hi.hi_305.QueryBsVO[]
 */
public nc.vo.hi.hi_305.QueryBsVO[] getQueryBsVOs() {
	return queryBsVOs;
}

/**
 * 此处插入方法描述。
 * 创建日期：(2004-5-14 10:26:32)
 * @param newConditionVOs nc.vo.pub.query.ConditionVO[]
 */
public void setConditionVOs(nc.vo.pub.query.ConditionVO[] newConditionVOs) {
	conditionVOs = newConditionVOs;
}

/**
 * 此处插入方法描述。
 * 创建日期：(2004-5-17 14:51:42)
 * @param newIsCurDate boolean
 */
public void setIsCurDate(String newIsCurDate) {
	m_isCurDate = newIsCurDate;
}

/**
 * 此处插入方法描述。
 * 创建日期：(2004-5-13 21:12:30)
 * @param newQueryBsVOs nc.vo.hi.hi_305.QueryBsVO[]
 */
public void setQueryBsVOs(nc.vo.hi.hi_305.QueryBsVO[] newQueryBsVOs) {
	queryBsVOs = newQueryBsVOs;
}
}
