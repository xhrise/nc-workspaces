/***************************************************************\
 *     The skeleton of this class is generated by an automatic *
 * code generator for NC product.                              *
\***************************************************************/

package nc.vo.hi.hi_312;

import java.util.ArrayList;

import nc.vo.hr.utils.ml.HRPubRes;
import nc.vo.pub.*;
import nc.vo.pub.lang.*;

/**
 * 此处插入类型说明。
 *
 * 创建日期：(2003-9-18)
 * @author：王飞
 */
public class PsndocBadHeaderVO extends CircularlyAccessibleValueObject {

	public String m_pk_psndoc_bad;
	public String m_psncode;
	public String m_psnname;
	public Integer m_comefrom;
	public String m_sex;
	public String m_birthday;
	public String m_id;
	public String m_permanentres;
	public String m_cause;
	public String m_pk_corp;
	public String m_cuserid;
	public String m_indate;
	public Integer m_delflag;
	public String m_checkdate;
	public String m_checkpsn;
	public String m_checkcause;
	public UFDateTime m_ts;
	public Integer m_dr;
	
	private String strSex;//wangkf add
/**
 * 使用主键字段进行初始化的构造子。
 *
 * 创建日期：(2003-9-18)
 */
public PsndocBadHeaderVO() {

}
/**
 * 使用主键进行初始化的构造子。
 *
 * 创建日期：(2003-9-18)
 * @param ??fieldNameForMethod?? 主键值
 */
public PsndocBadHeaderVO(String newPk_psndoc_bad) {

	// 为主键字段赋值:
	m_pk_psndoc_bad = newPk_psndoc_bad;
}
/**
 * 根类Object的方法,克隆这个VO对象。
 *
 * 创建日期：(2003-9-18)
 */
public Object clone() {

	// 复制基类内容并创建新的VO对象：
	Object o = null;
	try {
		o = super.clone();
	} catch (Exception e) {}
	PsndocBadHeaderVO psndocBad = (PsndocBadHeaderVO)o;

	// 你在下面复制本VO对象的所有属性：

	return psndocBad;
}
/**
 * 返回数值对象的显示名称。
 *
 * 创建日期：(2003-9-18)
 * @return java.lang.String 返回数值对象的显示名称。
 */
public String getEntityName() {

	return "PsndocBad";
}
/**
 * 返回对象标识，用来唯一定位对象。
 *
 * 创建日期：(2003-9-18)
 * @return String
 */
public String getPrimaryKey() {

	return m_pk_psndoc_bad;
}
/**
 * 设置对象标识，用来唯一定位对象。
 *
 * 创建日期：(2003-9-18)
 * @param m_pk_psndoc_bad String
 */
public void setPrimaryKey(String newPk_psndoc_bad) {

	m_pk_psndoc_bad = newPk_psndoc_bad;
}
/**
 * 属性m_pk_psndoc_bad的Getter方法。
 *
 * 创建日期：(2003-9-18)
 * @return String
 */
public String getPk_psndoc_bad() {
	return m_pk_psndoc_bad;
}
/**
 * 属性m_psncode的Getter方法。
 *
 * 创建日期：(2003-9-18)
 * @return String
 */
public String getPsncode() {
	return m_psncode;
}
/**
 * 属性m_psnname的Getter方法。
 *
 * 创建日期：(2003-9-18)
 * @return String
 */
public String getPsnname() {
	return m_psnname;
}
/**
 * 属性m_comefrom的Getter方法。
 *
 * 创建日期：(2003-9-18)
 * @return Integer
 */
public Integer getComefrom() {
	return m_comefrom;
}


/**
 * 属性m_id的Getter方法。
 *
 * 创建日期：(2003-9-18)
 * @return String
 */
public String getId() {
	return m_id;
}
/**
 * 属性m_permanentres的Getter方法。
 *
 * 创建日期：(2003-9-18)
 * @return String
 */
public String getPermanentres() {
	return m_permanentres;
}
/**
 * 属性m_cause的Getter方法。
 *
 * 创建日期：(2003-9-18)
 * @return String
 */
public String getCause() {
	return m_cause;
}
/**
 * 属性m_pk_corp的Getter方法。
 *
 * 创建日期：(2003-9-18)
 * @return String
 */
public String getPk_corp() {
	return m_pk_corp;
}
/**
 * 属性m_cuserid的Getter方法。
 *
 * 创建日期：(2003-9-18)
 * @return String
 */
public String getCuserid() {
	return m_cuserid;
}



/**
 * 属性m_checkpsn的Getter方法。
 *
 * 创建日期：(2003-9-18)
 * @return String
 */
public String getCheckpsn() {
	return m_checkpsn;
}
/**
 * 属性m_checkcause的Getter方法。
 *
 * 创建日期：(2003-9-18)
 * @return String
 */
public String getCheckcause() {
	return m_checkcause;
}
/**
 * 属性m_ts的Getter方法。
 *
 * 创建日期：(2003-9-18)
 * @return UFDateTime
 */
public UFDateTime getTs() {
	return m_ts;
}
/**
 * 属性m_dr的Getter方法。
 *
 * 创建日期：(2003-9-18)
 * @return Integer
 */
public Integer getDr() {
	return m_dr;
}
/**
 * 属性m_pk_psndoc_bad的setter方法。
 *
 * 创建日期：(2003-9-18)
 * @param newM_pk_psndoc_bad String
 */
public void setPk_psndoc_bad(String newPk_psndoc_bad) {

	m_pk_psndoc_bad = newPk_psndoc_bad;
}
/**
 * 属性m_psncode的setter方法。
 *
 * 创建日期：(2003-9-18)
 * @param newM_psncode String
 */
public void setPsncode(String newPsncode) {

	m_psncode = newPsncode;
}
/**
 * 属性m_psnname的setter方法。
 *
 * 创建日期：(2003-9-18)
 * @param newM_psnname String
 */
public void setPsnname(String newPsnname) {

	m_psnname = newPsnname;
}
/**
 * 属性m_comefrom的setter方法。
 *
 * 创建日期：(2003-9-18)
 * @param newM_comefrom Integer
 */
public void setComefrom(Integer newComefrom) {

	m_comefrom = newComefrom;
}


/**
 * 属性m_id的setter方法。
 *
 * 创建日期：(2003-9-18)
 * @param newM_id String
 */
public void setId(String newId) {

	m_id = newId;
}
/**
 * 属性m_permanentres的setter方法。
 *
 * 创建日期：(2003-9-18)
 * @param newM_permanentres String
 */
public void setPermanentres(String newPermanentres) {

	m_permanentres = newPermanentres;
}
/**
 * 属性m_cause的setter方法。
 *
 * 创建日期：(2003-9-18)
 * @param newM_cause String
 */
public void setCause(String newCause) {

	m_cause = newCause;
}
/**
 * 属性m_pk_corp的setter方法。
 *
 * 创建日期：(2003-9-18)
 * @param newM_pk_corp String
 */
public void setPk_corp(String newmakebillpsn) {

	m_pk_corp = newmakebillpsn;
}
/**
 * 属性m_cuserid的setter方法。
 *
 * 创建日期：(2003-9-18)
 * @param newM_cuserid String
 */
public void setCuserid(String newCuserid) {

	m_cuserid = newCuserid;
}



/**
 * 属性m_checkpsn的setter方法。
 *
 * 创建日期：(2003-9-18)
 * @param newM_checkpsn String
 */
public void setCheckpsn(String newCheckpsn) {

	m_checkpsn = newCheckpsn;
}
/**
 * 属性m_checkcause的setter方法。
 *
 * 创建日期：(2003-9-18)
 * @param newM_checkcause String
 */
public void setCheckcause(String newCheckcause) {

	m_checkcause = newCheckcause;
}
/**
 * 属性m_ts的setter方法。
 *
 * 创建日期：(2003-9-18)
 * @param newM_ts UFDateTime
 */
public void setTs(UFDateTime newTs) {

	m_ts = newTs;
}
/**
 * 属性m_dr的setter方法。
 *
 * 创建日期：(2003-9-18)
 * @param newM_dr Integer
 */
public void setDr(Integer newDr) {

	m_dr = newDr;
}
/**
 * 验证对象各属性之间的数据逻辑正确性。
 *
 * 创建日期：(2003-9-18)
 * @exception nc.vo.pub.ValidationException 如果验证失败，抛出
 *     ValidationException，对错误进行解释。
 */
public void validate() throws ValidationException {

	ArrayList errFields = new ArrayList(); // errFields record those null fields that cannot be null.
	// 检查是否为不允许空的字段赋了空值，你可能需要修改下面的提示信息：
	if (m_pk_psndoc_bad == null) {
		errFields.add(new String("m_pk_psndoc_bad"));
	}
	if (m_psnname == null) {
		errFields.add(new String("m_psnname"));
	}
	if (m_id == null) {
		errFields.add(new String("m_id"));
	}
	if (m_cause == null) {
		errFields.add(new String("m_cause"));
	}
	// construct the exception message:
	StringBuffer message = new StringBuffer();
	message.append(nc.vo.bd.IBDMsg.MSG_NULL_FIELD);//message.append("下列字段不能为空：");
	if (errFields.size() > 0) {
		String[] temp = (String[]) errFields.toArray(new String[0]);
		message.append(temp[0]);
		for ( int i= 1; i < temp.length; i++ ) {
			message.append(",");//message.append("、");
			message.append(temp[i]);
		}
		// throw the exception:
		throw new NullFieldException(message.toString());
	}
}
/**
 * <p>需要在一个循环中访问的属性的名称数组。
 * <p>
 * 创建日期：(??Date??)
 * @return java.lang.String[]
 */
public java.lang.String[] getAttributeNames() {

	return new String[]{ "psncode", "psnname", "comefrom", "sex", "birthday", "id", "permanentres", "cause", "pk_corp", "cuserid", "indate", "delflag", "checkdate", "checkpsn", "checkcause","date","ts", "dr" };
}
/**
 *  <p>根据一个属性名称字符串该属性的值。
 *  <p>
 * 创建日期：(2003-9-18)
 * @param key java.lang.String
 */
public Object getAttributeValue(String attributeName) {

	if (attributeName.equals("pk_psndoc_bad")) {
		return m_pk_psndoc_bad;
	}
	else if (attributeName.equals("logdate")) {//wangkf fixed
		return m_date;
	}
	else if (attributeName.equals("psncode")) {
		return m_psncode;
	}
	else if (attributeName.equals("psnname")) {
		return m_psnname;
	}
	else if (attributeName.equals("comefrom")) {
		return m_comefrom;
	}
	else if (attributeName.equals("sex")) {
		return m_sex;
	}
	else if (attributeName.equals("birthday")) {
		return m_birthday;
	}
	else if (attributeName.equals("id")) {
		return m_id;
	}
	else if (attributeName.equals("permanentres")) {
		return m_permanentres;
	}
	else if (attributeName.equals("cause")) {
		return m_cause;
	}
	else if (attributeName.equals("pk_corp")) {
		return m_pk_corp;
	}
	else if (attributeName.equals("cuserid")) {
		return m_cuserid;
	}
	else if (attributeName.equals("indate")) {
		return m_indate;
	}
	else if (attributeName.equals("delflag")) {
		return m_delflag;
	}
	else if (attributeName.equals("checkdate")) {
		return m_checkdate;
	}
	else if (attributeName.equals("checkpsn")) {
		return m_checkpsn;
	}
	else if (attributeName.equals("checkcause")) {
		return m_checkcause;
	}
	else if (attributeName.equals("ts")) {
		return m_ts;
	}
	else if (attributeName.equals("dr")) {
		return m_dr;
	}
	else if (attributeName.equals("corpname")) {
		return m_addcorpname;
	}
	else if (attributeName.equals("addpsnname")) {
		return m_addpsnname;
	}
	else if (attributeName.equals("checkpsnname")) {
		return m_checkpsncode;
	}
	else if (attributeName.equals("bdelflag")) {
		return m_delflag.intValue()==0 ? new Boolean(false) : new Boolean(true);
	}
	else if (attributeName.equals("strsex")) {
		return strSex;
//		if(m_sex==null||m_sex.equals("")||m_sex.equals("0"))
//			return null;
//		else if(m_sex.equals("1")){
//			return nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("600713","UPP600713-000012")/*@res "男"*/;
//		}else if(m_sex.equals("2")){
//			return nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("600713","UPP600713-000013")/*@res "女"*/;
//		}
//		return null;
	}
	return null;
}
/**
 *  <p>对参数name对型的属性设置值。
 *  <p>
 * 创建日期：(2003-9-18)
 * @param key java.lang.String
 */
public void setAttributeValue(String name, Object value) {

	try {
		if (name.equals("pk_psndoc_bad")) {
			m_pk_psndoc_bad = (String) value;
		}else if(name.equals("logdate")){//wangkf fixed
			m_date = (String)value;
		}
		else if (name.equals("psncode")) {
			m_psncode = (String) value;
		}
		else if (name.equals("psnname")) {
			m_psnname = (String) value;
		}
		else if (name.equals("comefrom")) {
			m_comefrom = (Integer) value;
		}
		else if (name.equals("sex")) {
			m_sex = (String) value;
		}
		else if (name.equals("birthday")) {
			m_birthday = (String) value;
		}
		else if (name.equals("id")) {
			m_id = (String) value;
		}
		else if (name.equals("permanentres")) {
			m_permanentres = (String) value;
		}
		else if (name.equals("cause")) {
			m_cause = (String) value;
		}
		else if (name.equals("pk_corp")) {
			m_pk_corp = (String) value;
		}
		else if (name.equals("cuserid")) {
			m_cuserid = (String) value;
		}
		else if (name.equals("indate")) {
			m_indate = (String) value;
		}
		else if (name.equals("delflag")) {
			m_delflag = (Integer) value;
		}
		else if (name.equals("checkdate")) {
			m_checkdate = (String) value;
		}
		else if (name.equals("checkpsn")) {
			m_checkpsn = (String) value;
		}
		else if (name.equals("checkcause")) {
			m_checkcause = (String) value;
		}
		else if (name.equals("ts")) {
			m_ts = (UFDateTime) value;
		}
		else if (name.equals("dr")) {
			m_dr = (Integer) value;
		}else if (name.equals("strsex")) {
			strSex = (String) value;
		}
	}
	catch (ClassCastException e) {
		throw new ClassCastException(HRPubRes.getClassCastErrMsg(name,value));//throw new ClassCastException("setAttributeValue方法中为 " + name + " 赋值时类型转换错误！（值：" + value + "）");
	}
}

	public String m_addcorpname;
	public String m_addpsnname;
	public String m_checkpsncode;
	public String m_date;
	public String m_makebillpsn;
	public String m_unitname;

/**
 * 属性m_checkcause的Getter方法。
 *
 * 创建日期：(2003-9-18)
 * @return String
 */
public String getAddcorpName() {
	return m_addcorpname;
}

/**
 * 属性m_checkcause的Getter方法。
 *
 * 创建日期：(2003-9-18)
 * @return String
 */
public String getAddpsnName() {
	return m_addpsnname;
}

/**
 * 属性m_birthday的Getter方法。
 *
 * 创建日期：(2003-9-18)
 * @return UFDate
 */
public String getBirthday() {
	return m_birthday;
}

/**
 * 属性m_checkdate的Getter方法。
 *
 * 创建日期：(2003-9-18)
 * @return UFDate
 */
public String getCheckdate() {
	return m_checkdate;
}

/**
 * 属性m_psncode的Getter方法。
 *
 * 创建日期：(2003-9-18)
 * @return String
 */
public String getCheckPsnName() {
	return m_checkpsncode;
}

/**
 * 属性m_date的Getter方法。
 *
 * 创建日期：(2003-9-18)
 * @return String
 */
public String getDate() {
	return m_date;
}

/**
 * 属性m_delflag的Getter方法。
 *
 * 创建日期：(2003-9-18)
 * @return UFBoolean
 */
public Integer getDelflag() {
	return m_delflag;
}

/**
 * 属性m_indate的Getter方法。
 *
 * 创建日期：(2003-9-18)
 * @return UFDate
 */
public String getIndate() {
	return m_indate;
}

/**
 * 属性m_checkcause的Getter方法。
 *
 * 创建日期：(2003-9-18)
 * @return String
 */
public String getMakebillpsn() {
	return m_makebillpsn;
}

/**
 * 属性m_sex的Getter方法。
 *
 * 创建日期：(2003-9-18)
 * @return UFBoolean
 */
public String getSex() {
	return m_sex;
}

/**
 * 属性m_checkcause的Getter方法。
 *
 * 创建日期：(2003-9-18)
 * @return String
 */
public String getUnitame() {
	return m_unitname;
}

/**
 * 属性m_pk_corp的setter方法。
 *
 * 创建日期：(2003-9-18)
 * @param newM_pk_corp String
 */
public void setAddcorpName(String newaddpsn) {

	m_addcorpname = newaddpsn;
}

/**
 * 属性m_pk_corp的setter方法。
 *
 * 创建日期：(2003-9-18)
 * @param newM_pk_corp String
 */
public void setAddpsnName(String newaddpsn) {

	m_addpsnname = newaddpsn;
}

/**
 * 属性m_birthday的setter方法。
 *
 * 创建日期：(2003-9-18)
 * @param newM_birthday UFDate
 */
public void setBirthday(String newBirthday) {

	m_birthday = newBirthday;
}

/**
 * 属性m_checkdate的setter方法。
 *
 * 创建日期：(2003-9-18)
 * @param newM_checkdate UFDate
 */
public void setCheckdate(String newCheckdate) {

	m_checkdate = newCheckdate;
}

/**
 * 属性m_checkpsn的setter方法。
 *
 * 创建日期：(2003-9-18)
 * @param newM_checkpsn String
 */
public void setCheckpsnName(String newCheckpsn) {

	m_checkpsncode = newCheckpsn;
}

/**
 * 属性m_cuserid的setter方法。
 *
 * 创建日期：(2003-9-18)
 * @param newM_cuserid String
 */
public void setDate(String newDate) {

	m_date = newDate;
}

/**
 * 属性m_delflag的setter方法。
 *
 * 创建日期：(2003-9-18)
 * @param newM_delflag UFBoolean
 */
public void setDelflag(Integer newDelflag) {

	m_delflag = newDelflag;
}

/**
 * 属性m_indate的setter方法。
 *
 * 创建日期：(2003-9-18)
 * @param newM_indate UFDate
 */
public void setIndate(String newIndate) {

	m_indate = newIndate;
}

/**
 * 属性m_permanentres的setter方法。
 *
 * 创建日期：(2003-9-18)
 * @param newM_permanentres String
 */
public void setMakeBillPsn (String newPermanentres) {

	m_makebillpsn = newPermanentres;
}

/**
 * 属性m_sex的setter方法。
 *
 * 创建日期：(2003-9-18)
 * @param newM_sex UFBoolean
 */
public void setSex(String newSex) {

	m_sex = newSex;
}

/**
 * 属性m_permanentres的setter方法。
 *
 * 创建日期：(2003-9-18)
 * @param newM_permanentres String
 */
public void setUnitname(String newunitname) {

	m_unitname = newunitname;
}
	/**
	 * @return 返回 strSex。
	 */
	public String getStrSex() {
		return strSex;
	}
	/**
	 * @param strSex 要设置的 strSex。
	 */
	public void setStrSex(String strSex) {
		this.strSex = strSex;
	}
}
