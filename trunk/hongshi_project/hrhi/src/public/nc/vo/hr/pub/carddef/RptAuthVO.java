/***************************************************************\
 *     The skeleton of this class is generated by an automatic *
 * code generator for NC product.                              *
\***************************************************************/

package nc.vo.hr.pub.carddef;

import java.util.ArrayList;

import nc.vo.hr.tools.pub.StringUtils;
import nc.vo.ml.NCLangRes4VoTransl;
import nc.vo.pub.*;
import nc.vo.pub.lang.*;
/**
 * 
 * 
 * 创建日期:(2006-9-26)
 * @author:walkfire
 */
public class RptAuthVO extends SuperVO {
	   
	
	public String pk_rpt_auth;
	public Integer auth = new Integer(CommonValue.RPT_AUTH_VIEW);
	public Integer authtype = new Integer(CommonValue.RPT_AUTH_REF_TYPE_USER);
	public Integer dr;
	public String pk_corp;
	public String pk_rpt_def;
	public String refpk;
	public UFDateTime ts;
	
	// 显示用的字段
	public String ref_name = null;
	public String ref_code = null;
	public String rpt_name = null;
	public String rpt_code = null;
	public Integer rpt_type = new Integer(CommonValue.RPT_TYPE_CARD);
	public UFDateTime create_time = null;
	public UFDateTime update_time = null;
	
	/**
	 * 
	 * @return
	 */
	public String getAuthName(){
		if(CommonValue.RPT_AUTH_VIEW==auth.intValue()){
			return 
			NCLangRes4VoTransl.getNCLangRes().getStrByID(CommonValue.MOUDLE_CODE_CARDAUTH, "UPP60070107-000008");
//			"浏览";
		}else{
			return 
			NCLangRes4VoTransl.getNCLangRes().getStrByID(CommonValue.MOUDLE_CODE_CARDAUTH, "UPP60070107-000009");
//			"未分配";
		}
	}
	
	/**
	 * 
	 * @param n
	 */
	public void setAuthByName(String n){
		if(!StringUtils.hasText(n)){
			auth = new Integer(CommonValue.RPT_AUTH_NONE);
		}else if(n.equals(
			NCLangRes4VoTransl.getNCLangRes().getStrByID(CommonValue.MOUDLE_CODE_CARDAUTH, "UPP60070107-000008")
//			"浏览"
			)){
			auth = new Integer(CommonValue.RPT_AUTH_VIEW);
		}else{
			auth = new Integer(CommonValue.RPT_AUTH_NONE);
		}
	}
/**
 * 属性auth的Getter方法.
 *
 * 创建日期:(2006-9-26)
 * @return Integer
 */
public Integer getAuth() {
	return auth;
}
/**
 * 属性authtype的Getter方法.
 *
 * 创建日期:(2006-9-26)
 * @return Integer
 */
public Integer getAuthtype() {
	return authtype;
}
/**
 * 属性dr的Getter方法.
 *
 * 创建日期:(2006-9-26)
 * @return Integer
 */
public Integer getDr() {
	return dr;
}
/**
 * 属性pk_corp的Getter方法.
 *
 * 创建日期:(2006-9-26)
 * @return String
 */
public String getPk_corp() {
	return pk_corp;
}
/**
 * 属性pk_rpt_def的Getter方法.
 *
 * 创建日期:(2006-9-26)
 * @return String
 */
public String getPk_rpt_def() {
	return pk_rpt_def;
}
/**
 * 属性refpk的Getter方法.
 *
 * 创建日期:(2006-9-26)
 * @return String
 */
public String getRefpk() {
	return refpk;
}
/**
 * 属性ts的Getter方法.
 *
 * 创建日期:(2006-9-26)
 * @return UFDateTime
 */
public UFDateTime getTs() {
	return ts;
}
/**
 * 属性auth的setter方法.
 *
 * 创建日期:(2006-9-26)
 * @param newAuth Integer
 */
public void setAuth(Integer newAuth) {

	auth = newAuth;
}
/**
 * 属性authtype的setter方法.
 *
 * 创建日期:(2006-9-26)
 * @param newAuthtype Integer
 */
public void setAuthtype(Integer newAuthtype) {

	authtype = newAuthtype;
}
/**
 * 属性dr的setter方法.
 *
 * 创建日期:(2006-9-26)
 * @param newDr Integer
 */
public void setDr(Integer newDr) {

	dr = newDr;
}
/**
 * 属性pk_corp的setter方法.
 *
 * 创建日期:(2006-9-26)
 * @param newPk_corp String
 */
public void setPk_corp(String newPk_corp) {

	pk_corp = newPk_corp;
}
/**
 * 属性pk_rpt_def的setter方法.
 *
 * 创建日期:(2006-9-26)
 * @param newPk_rpt_def String
 */
public void setPk_rpt_def(String newPk_rpt_def) {

	pk_rpt_def = newPk_rpt_def;
}
/**
 * 属性refpk的setter方法.
 *
 * 创建日期:(2006-9-26)
 * @param newRefpk String
 */
public void setRefpk(String newRefpk) {

	refpk = newRefpk;
}
/**
 * 属性ts的setter方法.
 *
 * 创建日期:(2006-9-26)
 * @param newTs UFDateTime
 */
public void setTs(UFDateTime newTs) {

	ts = newTs;
}
/**
 * 验证对象各属性之间的数据逻辑正确性.
 *
 * 创建日期:(2006-9-26)
 * @exception nc.vo.pub.ValidationException 如果验证失败,抛出
 *     ValidationException,对错误进行解释.
 */
public void validate() throws ValidationException {

	ArrayList errFields = new ArrayList(); // errFields record those null fields that cannot be null.
	// 检查是否为不允许空的字段赋了空值,你可能需要修改下面的提示信息:
	if (auth == null) {
		errFields.add(new String("auth"));
	}
	if (pk_corp == null) {
		errFields.add(new String("pk_corp"));
	}
	if (pk_rpt_auth == null) {
		errFields.add(new String("pk_rpt_auth"));
	}
	// construct the exception message:
	StringBuffer message = new StringBuffer();
//	message.append("下列字段不能为空:");
	message.append(nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID(
			"600700", "UPP600700-000346")/* @res "下列字段不能为空：" */);
	if (errFields.size() > 0) {
		String[] temp = (String[]) errFields.toArray(new String[0]);
		message.append(temp[0]);
		for ( int i= 1; i < temp.length; i++ ) {
			message.append(",");
			message.append(temp[i]);
		}
		// throw the exception:
		throw new NullFieldException(message.toString());
	}
}
/**
 * <p>取得父VO主键字段.
 * <p>
 * 创建日期:(2006-9-26)
 * @return java.lang.String
 */
public java.lang.String getParentPKFieldName() {

	return  null;
}
/**
 * <p>取得表主键.
 * <p>
 * 创建日期:(2006-9-26)
 * @return java.lang.String
 */
public java.lang.String getPKFieldName() {

	return  "pk_rpt_auth";
}
/**
 * <p>返回表名称.
 * <p>
 * 创建日期:(2006-9-26)
 * @return java.lang.String
 */
public java.lang.String getTableName() {

	return "hr_rpt_auth";
}
/**
 * 使用主键字段进行初始化的构造子.
 *
 * 创建日期:(2006-9-26)
 */
public RptAuthVO() {
	super();
}
/**
 * 使用主键进行初始化的构造子.
 *
 * 创建日期:(2006-9-26)
 * @param Pk_rpt_auth 主键值
 */
public RptAuthVO(String newPk_rpt_auth) {
	super();

	// 为主键字段赋值:
	pk_rpt_auth = newPk_rpt_auth;
}
/**
 * 返回对象标识,用来唯一定位对象.
 *
 * 创建日期:(2006-9-26)
 * @return String
 */
public String getPrimaryKey() {

	return pk_rpt_auth;
}
/**
 * 设置对象标识,用来唯一定位对象.
 *
 * 创建日期:(2006-9-26)
 * @param pk_rpt_auth String 
 */
public void setPrimaryKey(String newPk_rpt_auth) {

	pk_rpt_auth = newPk_rpt_auth;
}
/**
 * @return the pk_rpt_auth
 */
public String getPk_rpt_auth() {
	return pk_rpt_auth;
}
/**
 * @param pk_rpt_auth the pk_rpt_auth to set
 */
public void setPk_rpt_auth(String pk_rpt_auth) {
	this.pk_rpt_auth = pk_rpt_auth;
}
/**
 * 返回数值对象的显示名称.
 *
 * 创建日期:(2006-9-26)
 * @return java.lang.String 返回数值对象的显示名称.
 */
public String getEntityName() {

	return "RptAuth";
}
/**
 * @return the create_time
 */
public UFDateTime getCreate_time() {
	return create_time;
}
/**
 * @param create_time the create_time to set
 */
public void setCreate_time(UFDateTime create_time) {
	this.create_time = create_time;
}
/**
 * @return the ref_code
 */
public String getRef_code() {
	return ref_code;
}
/**
 * @param ref_code the ref_code to set
 */
public void setRef_code(String ref_code) {
	this.ref_code = ref_code;
}
/**
 * @return the ref_name
 */
public String getRef_name() {
	return ref_name;
}
/**
 * @param ref_name the ref_name to set
 */
public void setRef_name(String ref_name) {
	this.ref_name = ref_name;
}
/**
 * @return the rpt_code
 */
public String getRpt_code() {
	return rpt_code;
}
/**
 * @param rpt_code the rpt_code to set
 */
public void setRpt_code(String rpt_code) {
	this.rpt_code = rpt_code;
}
/**
 * @return the rpt_name
 */
public String getRpt_name() {
	return rpt_name;
}
/**
 * @param rpt_name the rpt_name to set
 */
public void setRpt_name(String rpt_name) {
	this.rpt_name = rpt_name;
}
/**
 * @return the rpt_type
 */
public Integer getRpt_type() {
	return rpt_type;
}
/**
 * @param rpt_type the rpt_type to set
 */
public void setRpt_type(Integer rpt_type) {
	this.rpt_type = rpt_type;
}
/**
 * @return the update_time
 */
public UFDateTime getUpdate_time() {
	return update_time;
}
/**
 * @param update_time the update_time to set
 */
public void setUpdate_time(UFDateTime update_time) {
	this.update_time = update_time;
}

/**
 * 
 */
public String toString() {
	// TODO Auto-generated method stub
	return this.getRpt_code()+" "+this.getRpt_name();
}
}
