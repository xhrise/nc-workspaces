  /***************************************************************\
  *     The skeleton of this class is generated by an automatic *
  * code generator for NC product. It is based on Velocity.     *
  \***************************************************************/
      	package nc.vo.ehpta.hq010202;
   	
	import java.util.ArrayList;
	import nc.vo.pub.*;
	import nc.vo.pub.lang.*;
	
/**
 * <b> 在此处简要描述此类的功能 </b>
 *
 * <p>
 *     在此处添加此类的描述信息
 * </p>
 *
 * 创建日期:2012-7-9
 * @author ${vmObject.author}
 * @version Your Project 1.0
 */
     public class StorfareVO extends SuperVO {
           
             public String vbillno;
             public String pk_corp;
             public UFDate faredate;
             public UFDate dmakedate;
             public Integer dr;
             public String voperatorid;
             public String vapprovenote;
             public String pk_billtype;
             public UFDate dapprovedate;
             public Integer vbillstatus;
             public String vapproveid;
             public String pk_busitype;
             public UFDateTime ts;
             public String pk_storfare;
            
             public static final String  VBILLNO="vbillno";   
             public static final String  PK_CORP="pk_corp";   
             public static final String  FAREDATE="faredate";   
             public static final String  DMAKEDATE="dmakedate";   
             public static final String  DR="dr";   
             public static final String  VOPERATORID="voperatorid";   
             public static final String  VAPPROVENOTE="vapprovenote";   
             public static final String  PK_BILLTYPE="pk_billtype";   
             public static final String  DAPPROVEDATE="dapprovedate";   
             public static final String  VBILLSTATUS="vbillstatus";   
             public static final String  VAPPROVEID="vapproveid";   
             public static final String  PK_BUSITYPE="pk_busitype";   
             public static final String  TS="ts";   
             public static final String  PK_STORFARE="pk_storfare";   
      
    
        /**
	   * 属性vbillno的Getter方法.
	   *
	   * 创建日期:2012-7-9
	   * @return String
	   */
	 public String getVbillno() {
		 return vbillno;
	  }   
	  
     /**
	   * 属性vbillno的Setter方法.
	   *
	   * 创建日期:2012-7-9
	   * @param newVbillno String
	   */
	public void setVbillno(String newVbillno) {
		
		vbillno = newVbillno;
	 } 	  
       
        /**
	   * 属性pk_corp的Getter方法.
	   *
	   * 创建日期:2012-7-9
	   * @return String
	   */
	 public String getPk_corp() {
		 return pk_corp;
	  }   
	  
     /**
	   * 属性pk_corp的Setter方法.
	   *
	   * 创建日期:2012-7-9
	   * @param newPk_corp String
	   */
	public void setPk_corp(String newPk_corp) {
		
		pk_corp = newPk_corp;
	 } 	  
       
        /**
	   * 属性faredate的Getter方法.
	   *
	   * 创建日期:2012-7-9
	   * @return UFDate
	   */
	 public UFDate getFaredate() {
		 return faredate;
	  }   
	  
     /**
	   * 属性faredate的Setter方法.
	   *
	   * 创建日期:2012-7-9
	   * @param newFaredate UFDate
	   */
	public void setFaredate(UFDate newFaredate) {
		
		faredate = newFaredate;
	 } 	  
       
        /**
	   * 属性dmakedate的Getter方法.
	   *
	   * 创建日期:2012-7-9
	   * @return UFDate
	   */
	 public UFDate getDmakedate() {
		 return dmakedate;
	  }   
	  
     /**
	   * 属性dmakedate的Setter方法.
	   *
	   * 创建日期:2012-7-9
	   * @param newDmakedate UFDate
	   */
	public void setDmakedate(UFDate newDmakedate) {
		
		dmakedate = newDmakedate;
	 } 	  
       
        /**
	   * 属性dr的Getter方法.
	   *
	   * 创建日期:2012-7-9
	   * @return Integer
	   */
	 public Integer getDr() {
		 return dr;
	  }   
	  
     /**
	   * 属性dr的Setter方法.
	   *
	   * 创建日期:2012-7-9
	   * @param newDr Integer
	   */
	public void setDr(Integer newDr) {
		
		dr = newDr;
	 } 	  
       
        /**
	   * 属性voperatorid的Getter方法.
	   *
	   * 创建日期:2012-7-9
	   * @return String
	   */
	 public String getVoperatorid() {
		 return voperatorid;
	  }   
	  
     /**
	   * 属性voperatorid的Setter方法.
	   *
	   * 创建日期:2012-7-9
	   * @param newVoperatorid String
	   */
	public void setVoperatorid(String newVoperatorid) {
		
		voperatorid = newVoperatorid;
	 } 	  
       
        /**
	   * 属性vapprovenote的Getter方法.
	   *
	   * 创建日期:2012-7-9
	   * @return String
	   */
	 public String getVapprovenote() {
		 return vapprovenote;
	  }   
	  
     /**
	   * 属性vapprovenote的Setter方法.
	   *
	   * 创建日期:2012-7-9
	   * @param newVapprovenote String
	   */
	public void setVapprovenote(String newVapprovenote) {
		
		vapprovenote = newVapprovenote;
	 } 	  
       
        /**
	   * 属性pk_billtype的Getter方法.
	   *
	   * 创建日期:2012-7-9
	   * @return String
	   */
	 public String getPk_billtype() {
		 return pk_billtype;
	  }   
	  
     /**
	   * 属性pk_billtype的Setter方法.
	   *
	   * 创建日期:2012-7-9
	   * @param newPk_billtype String
	   */
	public void setPk_billtype(String newPk_billtype) {
		
		pk_billtype = newPk_billtype;
	 } 	  
       
        /**
	   * 属性dapprovedate的Getter方法.
	   *
	   * 创建日期:2012-7-9
	   * @return UFDate
	   */
	 public UFDate getDapprovedate() {
		 return dapprovedate;
	  }   
	  
     /**
	   * 属性dapprovedate的Setter方法.
	   *
	   * 创建日期:2012-7-9
	   * @param newDapprovedate UFDate
	   */
	public void setDapprovedate(UFDate newDapprovedate) {
		
		dapprovedate = newDapprovedate;
	 } 	  
       
        /**
	   * 属性vbillstatus的Getter方法.
	   *
	   * 创建日期:2012-7-9
	   * @return Integer
	   */
	 public Integer getVbillstatus() {
		 return vbillstatus;
	  }   
	  
     /**
	   * 属性vbillstatus的Setter方法.
	   *
	   * 创建日期:2012-7-9
	   * @param newVbillstatus Integer
	   */
	public void setVbillstatus(Integer newVbillstatus) {
		
		vbillstatus = newVbillstatus;
	 } 	  
       
        /**
	   * 属性vapproveid的Getter方法.
	   *
	   * 创建日期:2012-7-9
	   * @return String
	   */
	 public String getVapproveid() {
		 return vapproveid;
	  }   
	  
     /**
	   * 属性vapproveid的Setter方法.
	   *
	   * 创建日期:2012-7-9
	   * @param newVapproveid String
	   */
	public void setVapproveid(String newVapproveid) {
		
		vapproveid = newVapproveid;
	 } 	  
       
        /**
	   * 属性pk_busitype的Getter方法.
	   *
	   * 创建日期:2012-7-9
	   * @return String
	   */
	 public String getPk_busitype() {
		 return pk_busitype;
	  }   
	  
     /**
	   * 属性pk_busitype的Setter方法.
	   *
	   * 创建日期:2012-7-9
	   * @param newPk_busitype String
	   */
	public void setPk_busitype(String newPk_busitype) {
		
		pk_busitype = newPk_busitype;
	 } 	  
       
        /**
	   * 属性ts的Getter方法.
	   *
	   * 创建日期:2012-7-9
	   * @return UFDateTime
	   */
	 public UFDateTime getTs() {
		 return ts;
	  }   
	  
     /**
	   * 属性ts的Setter方法.
	   *
	   * 创建日期:2012-7-9
	   * @param newTs UFDateTime
	   */
	public void setTs(UFDateTime newTs) {
		
		ts = newTs;
	 } 	  
       
        /**
	   * 属性pk_storfare的Getter方法.
	   *
	   * 创建日期:2012-7-9
	   * @return String
	   */
	 public String getPk_storfare() {
		 return pk_storfare;
	  }   
	  
     /**
	   * 属性pk_storfare的Setter方法.
	   *
	   * 创建日期:2012-7-9
	   * @param newPk_storfare String
	   */
	public void setPk_storfare(String newPk_storfare) {
		
		pk_storfare = newPk_storfare;
	 } 	  
       
       
    /**
	  * 验证对象各属性之间的数据逻辑正确性.
	  *
	  * 创建日期:2012-7-9
	  * @exception nc.vo.pub.ValidationException 如果验证失败,抛出
	  * ValidationException,对错误进行解释.
	 */
	 public void validate() throws ValidationException {
	
	 	ArrayList errFields = new ArrayList(); // errFields record those null

                                                      // fields that cannot be null.
       		  // 检查是否为不允许空的字段赋了空值,你可能需要修改下面的提示信息:
	
	   		if (pk_storfare == null) {
			errFields.add(new String("pk_storfare"));
			  }	
	   	
	    StringBuffer message = new StringBuffer();
		message.append("下列字段不能为空:");
		if (errFields.size() > 0) {
		String[] temp = (String[]) errFields.toArray(new String[0]);
		message.append(temp[0]);
		for ( int i= 1; i < temp.length; i++ ) {
			message.append(",");
			message.append(temp[i]);
		}
		throw new NullFieldException(message.toString());
		}
	 }
			   
       
   	/**
	  * <p>取得父VO主键字段.
	  * <p>
	  * 创建日期:2012-7-9
	  * @return java.lang.String
	  */
	public java.lang.String getParentPKFieldName() {
	  	 
	 	    return null;
	 	
	}   
    
    /**
	  * <p>取得表主键.
	  * <p>
	  * 创建日期:2012-7-9
	  * @return java.lang.String
	  */
	public java.lang.String getPKFieldName() {
	 	  return "pk_storfare";
	 	}
    
	/**
      * <p>返回表名称.
	  * <p>
	  * 创建日期:2012-7-9
	  * @return java.lang.String
	 */
	public java.lang.String getTableName() {
				
		return "ehpta_storfare";
	}    
    
    /**
	  * 按照默认方式创建构造子.
	  *
	  * 创建日期:2012-7-9
	  */
	public StorfareVO() {
			
			   super();	
	  }    
    
            /**
	 * 使用主键进行初始化的构造子.
	 *
	 * 创建日期:2012-7-9
	 * @param newPk_storfare 主键值
	 */
	 public StorfareVO(String newPk_storfare) {
		
		// 为主键字段赋值:
		 pk_storfare = newPk_storfare;
	
    	}
    
     
     /**
	  * 返回对象标识,用来唯一定位对象.
	  *
	  * 创建日期:2012-7-9
	  * @return String
	  */
	   public String getPrimaryKey() {
				
		 return pk_storfare;
	   
	   }

     /**
	  * 设置对象标识,用来唯一定位对象.
	  *
	  * 创建日期:2012-7-9
	  * @param newPk_storfare  String    
	  */
	 public void setPrimaryKey(String newPk_storfare) {
				
				pk_storfare = newPk_storfare; 
				
	 } 
           
	  /**
       * 返回数值对象的显示名称.
	   *
	   * 创建日期:2012-7-9
	   * @return java.lang.String 返回数值对象的显示名称.
	   */
	 public String getEntityName() {
				
	   return "ehpta_storfare"; 
				
	 } 
} 
